:macro pointer ADDRESS {
  :byte { ADDRESS >> 8 }
  :byte { ADDRESS }
}

:macro unpack-long ADDR {
  :calc hi { 0xFF & ADDR >> 8 }
  :calc lo { 0xFF & ADDR }
  v0 := hi
  v1 := lo
}

:alias viper-delay vE

:org 0xB70

#####################
# Tiles for the mini-map

: top-down-tiles

# empty
  0b11110000
  0b11110000
  0b11110000
  0b11110000

  0b00000000
  0b00000000
  0b00000000
  0b00000000

# wall
  0b00000000
  0b00000000
  0b00000000
  0b00000000

  0b01010000
  0b10100000
  0b01010000
  0b10100000

# player starting position
  0b11110000
  0b11010000
  0b11010000
  0b11110000

  0b00000000
  0b01100000
  0b01100000
  0b00000000

# finish
  0b11110000
  0b11110000
  0b10010000
  0b10010000

  0b01100000
  0b11110000
  0b10010000
  0b10010000

# button
  0b11110000
  0b10010000
  0b10010000
  0b11110000

  0b00000000
  0b01100000
  0b01100000
  0b00000000

# snake
  0b11010000
  0b11110000
  0b11110000
  0b11110000

  0b00100000
  0b01000000
  0b00100000
  0b01000000

# Coins are not visible on the map
  0b11110000
  0b11110000
  0b11110000
  0b11110000

  0b00000000
  0b00000000
  0b00000000
  0b00000000

: player-tile

# Up
  0b00000000
  0b01100000
  0b00000000
  0b00000000

  0b00000000
  0b01100000
  0b01100000
  0b00000000

# Right
  0b00000000
  0b00100000
  0b00100000
  0b00000000

  0b00000000
  0b01100000
  0b01100000
  0b00000000

# Down
  0b00000000
  0b00000000
  0b01100000
  0b00000000

  0b00000000
  0b01100000
  0b01100000
  0b00000000

# Left
  0b00000000
  0b01000000
  0b01000000
  0b00000000

  0b00000000
  0b01100000
  0b01100000
  0b00000000

: hall-0+0+0
    0x3f 0xf 0x83 0xe0 0xe0 0x44 0x6 0x83 
  
: hall-0+0+8
    0xf0 0xf0 0xf3 0x73 0x3 0xe0 0xe6 0xe7 
  
: hall-0+0+16
    0xe7 0xe6 0xc0 0x83 0x7b 0xf3 0xf0 0xe0 
  
: hall-0+0+24
    0xc3 0x86 0x24 0xe0 0xe0 0x80 0x0 0x0 
  
: hall-0+8+0
    0xff 0xff 0xff 0xff 0x3f 0xf 0x43 0x40 
  
: hall-0+8+8
    0x68 0xa 0x20 0x20 0xb4 0x14 0x40 0x6a 
  
: hall-0+8+16
    0x6a 0x40 0x14 0xb4 0x20 0x20 0x2 0x68 
  
: hall-0+8+24
    0x40 0x40 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-0+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-0+16+8
    0x3f 0x2 0x40 0x68 0x0 0xb0 0x20 0x9 
  
: hall-0+16+16
    0x42 0x12 0xa0 0x0 0x68 0x40 0x0 0x0 
  
: hall-0+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-0+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-0+24+8
    0xff 0xff 0x77 0xa 0x0 0x80 0x0 0x0 
  
: hall-0+24+16
    0x40 0x0 0x80 0x0 0x0 0x0 0x0 0x0 
  
: hall-0+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-0+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-0+32+8
    0xff 0xff 0xee 0xb0 0x0 0x1 0x0 0x0 
  
: hall-0+32+16
    0x2 0x0 0x1 0x0 0x0 0x0 0x0 0x0 
  
: hall-0+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-0+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-0+40+8
    0xfc 0x40 0x2 0x16 0x0 0xd 0x4 0x90 
  
: hall-0+40+16
    0x42 0x48 0x5 0x0 0x16 0x2 0x0 0x0 
  
: hall-0+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-0+48+0
    0xff 0xff 0xff 0xff 0xfc 0xf0 0xc2 0x2 
  
: hall-0+48+8
    0x16 0x50 0x4 0x4 0x2d 0x28 0x2 0x56 
  
: hall-0+48+16
    0x56 0x2 0x28 0x2d 0x4 0x4 0x40 0x16 
  
: hall-0+48+24
    0x2 0x2 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-0+56+0
    0xfc 0xf0 0xc1 0x7 0x7 0x22 0x60 0xc1 
  
: hall-0+56+8
    0xf 0xf 0xcf 0xce 0xc0 0x7 0x67 0xe7 
  
: hall-0+56+16
    0xe7 0x67 0x3 0xc1 0xde 0xcf 0xf 0x7 
  
: hall-0+56+24
    0xc3 0x61 0x24 0x7 0x7 0x1 0x0 0x0 
  

: hall-1+0+0
    0xff 0xff 0x3 0x0 0xe0 0xf4 0xe6 0x3 
  
: hall-1+0+8
    0x20 0xf8 0xf3 0xfb 0xfb 0x0 0xf6 0xf7 
  
: hall-1+0+16
    0xf7 0xe6 0x80 0x3 0xeb 0xfb 0xf0 0x20 
  
: hall-1+0+24
    0x3 0xd6 0xf4 0xd0 0x0 0x0 0x0 0x0 
  
: hall-1+8+0
    0xff 0xff 0xff 0xff 0x3f 0xf 0x43 0x40 
  
: hall-1+8+8
    0x68 0xa 0x20 0x20 0xb4 0x14 0x40 0x6a 
  
: hall-1+8+16
    0x6a 0x40 0x14 0xb4 0x20 0x20 0x2 0x68 
  
: hall-1+8+24
    0x40 0x40 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-1+48+0
    0xff 0xff 0xff 0xff 0xfc 0xf0 0xc2 0x2 
  
: hall-1+48+8
    0x16 0x50 0x4 0x4 0x2d 0x28 0x2 0x56 
  
: hall-1+48+16
    0x56 0x2 0x28 0x2d 0x4 0x4 0x40 0x16 
  
: hall-1+48+24
    0x2 0x2 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-1+56+0
    0xff 0xff 0xc0 0x0 0x7 0x2f 0x67 0xc0 
  
: hall-1+56+8
    0x4 0x1f 0xcf 0xdf 0xdf 0x0 0x6f 0xef 
  
: hall-1+56+16
    0xef 0x67 0x1 0xc0 0xd7 0xdf 0xf 0x4 
  
: hall-1+56+24
    0xc0 0x6b 0x2f 0xb 0x0 0x0 0x0 0x0 

: hall-2+0+0
    0x3f 0xf 0x87 0xe7 0xe7 0x47 0x7 0x80 
  
: hall-2+0+8
    0xf2 0xf1 0xf0 0x71 0x7 0xe1 0xe0 0xe7 
  
: hall-2+0+16
    0xe3 0xe0 0xc0 0x86 0x7a 0xf0 0xf2 0xe1 
  
: hall-2+0+24
    0xc0 0x80 0x20 0xe0 0xe0 0x80 0x0 0x0 
  
: hall-2+8+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0x0 
  
: hall-2+8+8
    0x94 0xcc 0x0 0x98 0x9e 0xbc 0x0 0xc 
  
: hall-2+8+16
    0xdc 0xc6 0x0 0xd2 0x64 0x0 0xbc 0xe 
  
: hall-2+8+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-2+48+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0x0 
  
: hall-2+48+8
    0x29 0x33 0x0 0x19 0x79 0x3d 0x0 0x30 
  
: hall-2+48+16
    0x3b 0x63 0x0 0x4b 0x26 0x0 0x3d 0x70 
  
: hall-2+48+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-2+56+0
    0xfc 0xf0 0xe1 0xe7 0xe7 0xe2 0xe0 0x1 
  
: hall-2+56+8
    0x4f 0x8f 0xf 0x8e 0xe0 0x87 0x7 0xe7 
  
: hall-2+56+16
    0xc7 0x7 0x3 0x61 0x5e 0xf 0x4f 0x87 
  
: hall-2+56+24
    0x3 0x1 0x4 0x7 0x7 0x1 0x0 0x0 
  
: hall-3+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-3+16+8
    0x7f 0x55 0x0 0x2c 0x50 0x0 0x64 0x15 
  
: hall-3+16+16
    0x0 0x28 0x94 0x40 0x20 0x0 0x0 0x0 
  
: hall-3+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-3+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-3+24+8
    0xff 0xff 0x77 0xa 0x0 0x80 0x0 0x0 
  
: hall-3+24+16
    0x40 0x0 0x80 0x0 0x0 0x0 0x0 0x0 
  
: hall-3+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-3+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-3+32+8
    0xff 0xff 0xee 0xb0 0x0 0x1 0x0 0x0 
  
: hall-3+32+16
    0x2 0x0 0x1 0x0 0x0 0x0 0x0 0x0 
  
: hall-3+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-3+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-3+40+8
    0xfe 0x94 0x0 0x34 0xa 0x0 0x26 0xa8 
  
: hall-3+40+16
    0x0 0x14 0x29 0x2 0x4 0x0 0x0 0x0 
  
: hall-3+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: hall-3-5+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-3-5+16+8
    0x7f 0x55 0x0 0x2c 0x50 0x0 0x64 0x15 
  
: hall-3-5+16+16
    0x0 0x28 0x94 0x40 0x20 0x0 0x0 0x0 
  
: hall-3-5+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-3-5+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-3-5+24+8
    0xff 0xff 0x77 0xa 0x0 0x80 0x0 0x0 
  
: hall-3-5+24+16
    0x0 0x0 0x80 0x0 0x0 0x0 0x0 0x0 
  
: hall-3-5+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-3-5+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-3-5+32+8
    0xff 0xff 0xee 0xb0 0x0 0x1 0x0 0x0 
  
: hall-3-5+32+16
    0x0 0x0 0x1 0x0 0x0 0x0 0x0 0x0 
  
: hall-3-5+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-3-5+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-3-5+40+8
    0xfe 0x94 0x0 0x34 0xa 0x0 0x26 0xa8 
  
: hall-3-5+40+16
    0x0 0x14 0x29 0x2 0x4 0x0 0x0 0x0 
  
: hall-3-5+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: hall-3-6+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-3-6+16+8
    0x7f 0x55 0x0 0x2c 0x50 0x0 0x64 0x15 
  
: hall-3-6+16+16
    0x0 0x28 0x94 0x40 0x20 0x0 0x0 0x0 
  
: hall-3-6+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-3-6+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-3-6+24+8
    0xff 0xff 0x77 0xa 0x0 0x80 0x0 0x0 
  
: hall-3-6+24+16
    0x40 0x0 0x80 0x0 0x0 0x0 0x0 0x0 
  
: hall-3-6+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-3-6+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-3-6+32+8
    0xff 0xff 0xee 0xb0 0x0 0x1 0x0 0x0 
  
: hall-3-6+32+16
    0x2 0x0 0x1 0x0 0x0 0x0 0x0 0x0 
  
: hall-3-6+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-3-6+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-3-6+40+8
    0xfe 0x94 0x0 0x34 0xa 0x0 0x26 0xa8 
  
: hall-3-6+40+16
    0x0 0x14 0x29 0x2 0x4 0x0 0x0 0x0 
  
: hall-3-6+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: hall-4+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-4+16+8
    0x3f 0x2 0x40 0x68 0x0 0xb0 0x20 0x9 
  
: hall-4+16+16
    0x40 0x10 0xa0 0x0 0x68 0x40 0x0 0x0 
  
: hall-4+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-4+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-4+24+8
    0xff 0xff 0x77 0xa 0x0 0x0 0x0 0x0 
  
: hall-4+24+16
    0x80 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-4+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-4+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-4+32+8
    0xff 0xff 0xee 0xb0 0x0 0x0 0x0 0x0 
  
: hall-4+32+16
    0x0 0x1 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-4+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-4+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-4+40+8
    0xfc 0x40 0x2 0x16 0x0 0xd 0x84 0x10 
  
: hall-4+40+16
    0x2 0x8 0x5 0x0 0x16 0x2 0x0 0x0 
  
: hall-4+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: hall-4-6+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-4-6+16+8
    0x3f 0x2 0x40 0x68 0x0 0xb0 0x20 0x8 
  
: hall-4-6+16+16
    0x40 0x11 0xa0 0x0 0x68 0x40 0x0 0x0 
  
: hall-4-6+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-4-6+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-4-6+24+8
    0xff 0xff 0x77 0xa 0x0 0x0 0x80 0x0 
  
: hall-4-6+24+16
    0x80 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-4-6+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-4-6+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-4-6+32+8
    0xff 0xff 0xee 0xb0 0x0 0x0 0x0 0x1 
  
: hall-4-6+32+16
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-4-6+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-4-6+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-4-6+40+8
    0xfc 0x40 0x2 0x16 0x0 0xd 0x84 0x10 
  
: hall-4-6+40+16
    0x2 0x8 0x5 0x0 0x16 0x2 0x0 0x0 
  
: hall-4-6+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: hall-5+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-5+16+8
    0x3f 0x2 0x40 0x68 0x0 0xb0 0x20 0x9 
  
: hall-5+16+16
    0x42 0x12 0xa0 0x0 0x68 0x40 0x0 0x0 
  
: hall-5+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-5+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-5+24+8
    0xff 0xff 0x77 0xa 0x0 0x80 0x0 0x0 
  
: hall-5+24+16
    0x0 0x0 0x80 0x0 0x0 0x0 0x0 0x0 
  
: hall-5+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-5+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-5+32+8
    0xff 0xff 0xee 0xb0 0x0 0x1 0x0 0x0 
  
: hall-5+32+16
    0x0 0x0 0x1 0x0 0x0 0x0 0x0 0x0 
  
: hall-5+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-5+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-5+40+8
    0xfc 0x40 0x2 0x16 0x0 0xd 0x4 0x90 
  
: hall-5+40+16
    0x42 0x48 0x5 0x0 0x16 0x2 0x0 0x0 
  
: hall-5+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: hall-6+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-6+16+8
    0x3f 0x2 0x40 0x68 0x0 0xb0 0x20 0x9 
  
: hall-6+16+16
    0x42 0x12 0xa0 0x0 0x68 0x40 0x0 0x0 
  
: hall-6+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-6+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-6+24+8
    0xff 0xff 0x77 0xa 0x0 0x80 0x0 0x0 
  
: hall-6+24+16
    0x40 0x0 0x80 0x0 0x0 0x0 0x0 0x0 
  
: hall-6+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-6+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-6+32+8
    0xff 0xff 0xee 0xb0 0x0 0x1 0x0 0x0 
  
: hall-6+32+16
    0x2 0x0 0x1 0x0 0x0 0x0 0x0 0x0 
  
: hall-6+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: hall-6+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: hall-6+40+8
    0xfc 0x40 0x2 0x16 0x0 0xd 0x4 0x90 
  
: hall-6+40+16
    0x42 0x48 0x5 0x0 0x16 0x2 0x0 0x0 
  
: hall-6+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  

: wall-1+0+0
    0x3f 0xf 0x80 0xe3 0xe7 0x47 0x7 0x80 
  
: wall-1+0+8
    0xf1 0xf3 0xf3 0x73 0x2 0xe0 0xe7 0xe5 
  
: wall-1+0+16
    0xe3 0xe3 0xc1 0x80 0x7b 0xf3 0xf1 0xe0 
  
: wall-1+0+24
    0xc0 0x87 0x23 0xe3 0xe1 0x80 0x0 0x0 
  
: wall-1+8+0
    0xff 0xff 0x0 0xe7 0xef 0xef 0xef 0x0 
  
: wall-1+8+8
    0xf1 0xf3 0xf7 0xf3 0xf7 0x0 0xf3 0xf7 
  
: wall-1+8+16
    0xf3 0xf7 0xf3 0x0 0xfb 0xfb 0xf9 0xf0 
  
: wall-1+8+24
    0x0 0xef 0xe7 0xa7 0xc3 0x0 0x0 0x0 
  
: wall-1+16+0
    0xff 0xff 0x0 0x8f 0xbf 0xbf 0xbf 0x0 
  
: wall-1+16+8
    0x65 0xef 0xef 0xef 0xef 0x0 0xf7 0xf7 
  
: wall-1+16+16
    0xf7 0xf7 0xf3 0x0 0xfb 0xfb 0xfb 0xf8 
  
: wall-1+16+24
    0x0 0xef 0xe7 0xe7 0x83 0x0 0x0 0x0 
  
: wall-1+24+0
    0xff 0xff 0x0 0x93 0xbf 0xbf 0xbf 0x0 
  
: wall-1+24+8
    0xfb 0xfb 0xfb 0xfb 0xfb 0x0 0xf7 0xf7 
  
: wall-1+24+16
    0xf7 0xf7 0xf7 0x0 0xf3 0xfb 0xfb 0xfb 
  
: wall-1+24+24
    0x0 0xf7 0xf7 0xf7 0xc7 0x0 0x0 0x0 
  
: wall-1+32+0
    0xff 0xff 0x0 0xda 0xdf 0xdf 0xdf 0x0 
  
: wall-1+32+8
    0xf9 0xfd 0xfd 0xfd 0xfd 0x0 0xf7 0xf7 
  
: wall-1+32+16
    0xf7 0xf7 0xe7 0x0 0xfd 0xfd 0xfd 0xf9 
  
: wall-1+32+24
    0x0 0xfb 0xfb 0xfb 0xe3 0x0 0x0 0x0 
  
: wall-1+40+0
    0xff 0xff 0x0 0x71 0x79 0x7d 0x7d 0x0 
  
: wall-1+40+8
    0xe3 0xfb 0xfb 0xfb 0xfb 0x0 0xf7 0xf7 
  
: wall-1+40+16
    0xf7 0xf7 0xe7 0x0 0xfb 0xfb 0xfb 0xf3 
  
: wall-1+40+24
    0x0 0xf7 0xf7 0xf7 0xc5 0x0 0x0 0x0 
  
: wall-1+48+0
    0xff 0xff 0x0 0xc2 0xf3 0xfb 0xea 0x0 
  
: wall-1+48+8
    0xc6 0xe7 0xf7 0xf7 0xf7 0x0 0xf9 0xfb 
  
: wall-1+48+16
    0xf3 0xf3 0xe3 0x0 0xeb 0xef 0xef 0x8e 
  
: wall-1+48+24
    0x0 0xf5 0xf7 0xe7 0x85 0x0 0x0 0x0 
  
: wall-1+56+0
    0xfc 0xf0 0x1 0x7 0xc7 0xc2 0xe0 0x1 
  
: wall-1+56+8
    0x8f 0x8f 0xcf 0x8e 0x40 0x7 0xe7 0xe7 
  
: wall-1+56+16
    0xe7 0xc7 0x3 0x1 0xde 0xcf 0x8f 0x7 
  
: wall-1+56+24
    0x3 0xa1 0xe4 0xc7 0x7 0x1 0x0 0x0 
  

: wall-1-1+0+0
    0xff 0xff 0x0 0x3 0xe7 0xf7 0xe7 0x0 
  
: wall-1-1+0+8
    0x21 0xfb 0xf3 0xfb 0xfa 0x0 0xf7 0xf5 
  
: wall-1-1+0+16
    0xf3 0xe3 0x81 0x0 0xeb 0xfb 0xf1 0x20 
  
: wall-1-1+0+24
    0x0 0xd7 0xf3 0xd3 0x1 0x0 0x0 0x0 
  
: wall-1-1+8+0
    0xff 0xff 0x0 0xe7 0xef 0xef 0xef 0x0 
  
: wall-1-1+8+8
    0xf1 0xf3 0xf7 0xf3 0xf7 0x0 0xf3 0xf7 
  
: wall-1-1+8+16
    0xf3 0xf7 0xf3 0x0 0xfb 0xfb 0xf9 0xf0 
  
: wall-1-1+8+24
    0x0 0xef 0xe7 0xa7 0xc3 0x0 0x0 0x0 
  
: wall-1-1+48+0
    0xff 0xff 0x0 0xc2 0xf3 0xfb 0xea 0x0 
  
: wall-1-1+48+8
    0xc6 0xe7 0xf7 0xf7 0xf7 0x0 0xf9 0xfb 
  
: wall-1-1+48+16
    0xf3 0xf3 0xe3 0x0 0xeb 0xef 0xef 0x8e 
  
: wall-1-1+48+24
    0x0 0xf5 0xf7 0xe7 0x85 0x0 0x0 0x0 
  
: wall-1-1+56+0
    0xff 0xff 0x0 0x0 0xc7 0xcf 0xe7 0x0 
  
: wall-1-1+56+8
    0x84 0x9f 0xcf 0x9f 0x5f 0x0 0xef 0xef 
  
: wall-1-1+56+16
    0xef 0xc7 0x1 0x0 0xd7 0xdf 0x8f 0x4 
  
: wall-1-1+56+24
    0x0 0xab 0xef 0xcb 0x0 0x0 0x0 0x0 

: wall-1-2+0+0
    0xff 0xff 0xf0 0xf3 0x77 0xd7 0xb7 0x0 
  
: wall-1-2+0+8
    0xb1 0x13 0x3 0x7b 0x72 0x10 0x7 0xf5 
  
: wall-1-2+0+16
    0x73 0x13 0x1 0xb0 0x93 0x3 0x79 0x10 
  
: wall-1-2+0+24
    0x0 0x7 0x3 0x3 0x1 0x0 0x0 0x0 
  
: wall-1-2+8+0
    0xff 0xff 0x0 0xe7 0xef 0xef 0xef 0x0 
  
: wall-1-2+8+8
    0xf1 0xf3 0xf7 0xf3 0xf7 0x0 0xf3 0xf7 
  
: wall-1-2+8+16
    0xf3 0xf7 0xf3 0x0 0xfb 0xfb 0xf9 0xf0 
  
: wall-1-2+8+24
    0x0 0xef 0xe7 0xa7 0xc3 0x0 0x0 0x0 
  
: wall-1-2+48+0
    0xff 0xff 0x0 0xc2 0xf3 0xfb 0xea 0x0 
  
: wall-1-2+48+8
    0xc6 0xe7 0xf7 0xf7 0xf7 0x0 0xf9 0xfb 
  
: wall-1-2+48+16
    0xf3 0xf3 0xe3 0x0 0xeb 0xef 0xef 0x8e 
  
: wall-1-2+48+24
    0x0 0xf5 0xf7 0xe7 0x85 0x0 0x0 0x0 
  
: wall-1-2+56+0
    0xff 0xff 0xf 0xf 0xce 0xcb 0xed 0x0 
  
: wall-1-2+56+8
    0x8d 0x88 0xc0 0x9e 0x4e 0x8 0xe0 0xef 
  
: wall-1-2+56+16
    0xee 0xc8 0x0 0xd 0xc9 0xc0 0x9e 0x8 
  
: wall-1-2+56+24
    0x0 0xa0 0xe0 0xc0 0x0 0x0 0x0 0x0 

: wall-1-3+0+0
    0xff 0xff 0xf8 0xf3 0x77 0xd7 0xb7 0xd0 
  
: wall-1-3+0+8
    0x69 0x23 0x3 0xb3 0x4a 0x0 0x27 0xb5 
  
: wall-1-3+0+16
    0x3 0x53 0x1 0xc0 0xb 0x3 0x1 0x0 
  
: wall-1-3+0+24
    0x0 0x7 0x3 0x3 0x1 0x0 0x0 0x0 
  
: wall-1-3+8+0
    0xff 0xff 0x0 0xe7 0xef 0xef 0xef 0x0 
  
: wall-1-3+8+8
    0xf1 0xf3 0xf7 0xf3 0xf7 0x0 0xf3 0xf7 
  
: wall-1-3+8+16
    0xf3 0xf7 0xf3 0x0 0xfb 0xfb 0xf9 0xf0 
  
: wall-1-3+8+24
    0x0 0xef 0xe7 0xa7 0xc3 0x0 0x0 0x0 
  
: wall-1-3+48+0
    0xff 0xff 0x0 0xc2 0xf3 0xfb 0xea 0x0 
  
: wall-1-3+48+8
    0xc6 0xe7 0xf7 0xf7 0xf7 0x0 0xf9 0xfb 
  
: wall-1-3+48+16
    0xf3 0xf3 0xe3 0x0 0xeb 0xef 0xef 0x8e 
  
: wall-1-3+48+24
    0x0 0xf5 0xf7 0xe7 0x85 0x0 0x0 0x0 
  
: wall-1-3+56+0
    0xff 0xff 0x1f 0xf 0xce 0xcb 0xed 0xb 
  
: wall-1-3+56+8
    0x96 0x84 0xc0 0x8d 0x52 0x0 0xe4 0xed 
  
: wall-1-3+56+16
    0xe0 0xca 0x0 0x3 0xd0 0xc0 0x80 0x0 
  
: wall-1-3+56+24
    0x0 0xa0 0xe0 0xc0 0x0 0x0 0x0 0x0 

: wall-1-4+0+0
    0xff 0xff 0xf8 0xf3 0x77 0xd7 0xb7 0xd0 
  
: wall-1-4+0+8
    0x69 0x23 0x3 0x3 0x2 0x0 0x27 0x5 
  
: wall-1-4+0+16
    0x13 0x3 0x41 0x0 0x3 0x3 0x1 0x0 
  
: wall-1-4+0+24
    0x0 0x7 0x3 0x3 0x1 0x0 0x0 0x0 
  
: wall-1-4+8+0
    0xff 0xff 0x0 0xe7 0xef 0xef 0xef 0x0 
  
: wall-1-4+8+8
    0xf1 0xf3 0xf7 0xf3 0xf7 0x0 0xf3 0xf7 
  
: wall-1-4+8+16
    0xf3 0xf7 0xf3 0x0 0xfb 0xfb 0xf9 0xf0 
  
: wall-1-4+8+24
    0x0 0xef 0xe7 0xa7 0xc3 0x0 0x0 0x0 
  
: wall-1-4+48+0
    0xff 0xff 0x0 0xc2 0xf3 0xfb 0xea 0x0 
  
: wall-1-4+48+8
    0xc6 0xe7 0xf7 0xf7 0xf7 0x0 0xf9 0xfb 
  
: wall-1-4+48+16
    0xf3 0xf3 0xe3 0x0 0xeb 0xef 0xef 0x8e 
  
: wall-1-4+48+24
    0x0 0xf5 0xf7 0xe7 0x85 0x0 0x0 0x0 
  
: wall-1-4+56+0
    0xff 0xff 0x1f 0xf 0xce 0xcb 0xed 0xb 
  
: wall-1-4+56+8
    0x96 0x84 0xc0 0x80 0x40 0x0 0xe4 0xe0 
  
: wall-1-4+56+16
    0xe8 0xc0 0x2 0x0 0xc0 0xc0 0x80 0x0 
  
: wall-1-4+56+24
    0x0 0xa0 0xe0 0xc0 0x0 0x0 0x0 0x0 

: wall-1-5+0+0
    0xff 0xff 0xf8 0xf3 0x77 0xd7 0xb7 0xd0 
  
: wall-1-5+0+8
    0x69 0x23 0x83 0x43 0x2 0x0 0x7 0x5 
  
: wall-1-5+0+16
    0x3 0x3 0x1 0x0 0x3 0x3 0x1 0x0 
  
: wall-1-5+0+24
    0x0 0x7 0x3 0x3 0x1 0x0 0x0 0x0 
  
: wall-1-5+8+0
    0xff 0xff 0x0 0xe7 0xef 0xef 0xef 0x0 
  
: wall-1-5+8+8
    0xf1 0xf3 0xf7 0xf3 0xf7 0x0 0xf3 0xf7 
  
: wall-1-5+8+16
    0xf3 0xf7 0xf3 0x0 0xfb 0xfb 0xf9 0xf0 
  
: wall-1-5+8+24
    0x0 0xef 0xe7 0xa7 0xc3 0x0 0x0 0x0 
  
: wall-1-5+48+0
    0xff 0xff 0x0 0xc2 0xf3 0xfb 0xea 0x0 
  
: wall-1-5+48+8
    0xc6 0xe7 0xf7 0xf7 0xf7 0x0 0xf9 0xfb 
  
: wall-1-5+48+16
    0xf3 0xf3 0xe3 0x0 0xeb 0xef 0xef 0x8e 
  
: wall-1-5+48+24
    0x0 0xf5 0xf7 0xe7 0x85 0x0 0x0 0x0 
  
: wall-1-5+56+0
    0xff 0xff 0x1f 0xf 0xce 0xcb 0xed 0xb 
  
: wall-1-5+56+8
    0x96 0x84 0xc1 0x82 0x40 0x0 0xe0 0xe0 
  
: wall-1-5+56+16
    0xe0 0xc0 0x0 0x0 0xc0 0xc0 0x80 0x0 
  
: wall-1-5+56+24
    0x0 0xa0 0xe0 0xc0 0x0 0x0 0x0 0x0 

: wall-1-6+0+0
    0xff 0xff 0xf8 0xf3 0x77 0xd7 0xb7 0xd0 
  
: wall-1-6+0+8
    0x69 0x23 0x83 0x43 0x2 0x0 0x7 0x5 
  
: wall-1-6+0+16
    0x3 0x3 0x1 0x0 0x3 0x3 0x1 0x0 
  
: wall-1-6+0+24
    0x0 0x7 0x3 0x3 0x1 0x0 0x0 0x0 
  
: wall-1-6+8+0
    0xff 0xff 0x0 0xe7 0xef 0xef 0xef 0x0 
  
: wall-1-6+8+8
    0xf1 0xf3 0xf7 0xf3 0xf7 0x0 0xf3 0xf7 
  
: wall-1-6+8+16
    0xf3 0xf7 0xf3 0x0 0xfb 0xfb 0xf9 0xf0 
  
: wall-1-6+8+24
    0x0 0xef 0xe7 0xa7 0xc3 0x0 0x0 0x0 
  
: wall-1-6+48+0
    0xff 0xff 0x0 0xc2 0xf3 0xfb 0xea 0x0 
  
: wall-1-6+48+8
    0xc6 0xe7 0xf7 0xf7 0xf7 0x0 0xf9 0xfb 
  
: wall-1-6+48+16
    0xf3 0xf3 0xe3 0x0 0xeb 0xef 0xef 0x8e 
  
: wall-1-6+48+24
    0x0 0xf5 0xf7 0xe7 0x85 0x0 0x0 0x0 
  
: wall-1-6+56+0
    0xff 0xff 0x1f 0xf 0xce 0xcb 0xed 0xb 
  
: wall-1-6+56+8
    0x96 0x84 0xc1 0x82 0x40 0x0 0xe0 0xe0 
  
: wall-1-6+56+16
    0xe0 0xc0 0x0 0x0 0xc0 0xc0 0x80 0x0 
  
: wall-1-6+56+24
    0x0 0xa0 0xe0 0xc0 0x0 0x0 0x0 0x0 

: wall-2-3+0+0
    0x3f 0xf 0x87 0xe7 0xe7 0x43 0x6 0x83 
  
: wall-2-3+0+8
    0xf1 0xf0 0xf0 0x72 0x5 0xe0 0xe4 0xe2 
  
: wall-2-3+0+16
    0xe0 0xe2 0xc1 0x82 0x78 0xf0 0xf0 0xe0 
  
: wall-2-3+0+24
    0xc0 0x80 0x20 0xe0 0xe0 0x80 0x0 0x0 
  
: wall-2-3+8+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xdf 0xff 
  
: wall-2-3+8+8
    0xb2 0x41 0x0 0xd6 0x28 0x0 0xb2 0xca 
  
: wall-2-3+8+16
    0x0 0x54 0x8a 0x60 0x94 0x0 0x0 0x0 
  
: wall-2-3+8+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-2-3+48+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xfb 0xff 
  
: wall-2-3+48+8
    0x4d 0x82 0x0 0x6b 0x14 0x0 0x4d 0x53 
  
: wall-2-3+48+16
    0x0 0x2a 0x51 0x6 0x29 0x0 0x0 0x0 
  
: wall-2-3+48+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-2-3+56+0
    0xfc 0xf0 0xe1 0xe7 0xe7 0xc2 0x60 0xc1 
  
: wall-2-3+56+8
    0x8f 0xf 0xf 0x4e 0xa0 0x7 0x27 0x47 
  
: wall-2-3+56+16
    0x7 0x47 0x83 0x41 0x1e 0xf 0xf 0x7 
  
: wall-2-3+56+24
    0x3 0x1 0x4 0x7 0x7 0x1 0x0 0x0 

: wall-2-4+0+0
    0x3f 0xf 0x87 0xe7 0xe7 0x47 0x6 0x83 
  
: wall-2-4+0+8
    0xf1 0xf0 0xf1 0x70 0x0 0xe0 0xe4 0xe1 
  
: wall-2-4+0+16
    0xe0 0xe0 0xc2 0x80 0x78 0xf0 0xf0 0xe0 
  
: wall-2-4+0+24
    0xc0 0x80 0x20 0xe0 0xe0 0x80 0x0 0x0 
  
: wall-2-4+8+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xdf 0xff 
  
: wall-2-4+8+8
    0xb2 0x40 0x10 0x0 0x0 0x0 0xa 0x50 
  
: wall-2-4+8+16
    0x88 0x11 0x2 0x0 0x0 0x0 0x0 0x0 
  
: wall-2-4+8+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-2-4+48+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xfb 0xff 
  
: wall-2-4+48+8
    0x4d 0x2 0x8 0x0 0x0 0x0 0x50 0xa 
  
: wall-2-4+48+16
    0x11 0x88 0x40 0x0 0x0 0x0 0x0 0x0 
  
: wall-2-4+48+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-2-4+56+0
    0xfc 0xf0 0xe1 0xe7 0xe7 0xe2 0x60 0xc1 
  
: wall-2-4+56+8
    0x8f 0xf 0x8f 0xe 0x0 0x7 0x27 0x87 
  
: wall-2-4+56+16
    0x7 0x7 0x43 0x1 0x1e 0xf 0xf 0x7 
  
: wall-2-4+56+24
    0x3 0x1 0x4 0x7 0x7 0x1 0x0 0x0 

: wall-2-5+0+0
    0x3f 0xf 0x87 0xe7 0xe7 0x47 0x6 0x83 
  
: wall-2-5+0+8
    0xf1 0xf0 0xf1 0x70 0x0 0xe0 0xe0 0xe0 
  
: wall-2-5+0+16
    0xe0 0xe0 0xc0 0x80 0x78 0xf0 0xf0 0xe0 
  
: wall-2-5+0+24
    0xc0 0x80 0x20 0xe0 0xe0 0x80 0x0 0x0 
  
: wall-2-5+8+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xdf 0xff 
  
: wall-2-5+8+8
    0xb2 0x40 0x10 0x0 0x0 0x0 0x0 0x0 
  
: wall-2-5+8+16
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-2-5+8+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-2-5+48+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xfb 0xff 
  
: wall-2-5+48+8
    0x4d 0x2 0x8 0x0 0x0 0x0 0x0 0x0 
  
: wall-2-5+48+16
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-2-5+48+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-2-5+56+0
    0xfc 0xf0 0xe1 0xe7 0xe7 0xe2 0x60 0xc1 
  
: wall-2-5+56+8
    0x8f 0xf 0x8f 0xe 0x0 0x7 0x7 0x7 
  
: wall-2-5+56+16
    0x7 0x7 0x3 0x1 0x1e 0xf 0xf 0x7 
  
: wall-2-5+56+24
    0x3 0x1 0x4 0x7 0x7 0x1 0x0 0x0 

: wall-2-6+0+0
    0x3f 0xf 0x87 0xe7 0xe7 0x47 0x6 0x83 
  
: wall-2-6+0+8
    0xf1 0xf0 0xf1 0x70 0x0 0xe0 0xe0 0xe0 
  
: wall-2-6+0+16
    0xe0 0xe0 0xc0 0x80 0x78 0xf0 0xf0 0xe0 
  
: wall-2-6+0+24
    0xc0 0x80 0x20 0xe0 0xe0 0x80 0x0 0x0 
  
: wall-2-6+8+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xdf 0xff 
  
: wall-2-6+8+8
    0xb2 0x40 0x10 0x0 0x0 0x0 0x0 0x0 
  
: wall-2-6+8+16
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-2-6+8+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-2-6+48+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xfb 0xff 
  
: wall-2-6+48+8
    0x4d 0x2 0x8 0x0 0x0 0x0 0x0 0x0 
  
: wall-2-6+48+16
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-2-6+48+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-2-6+56+0
    0xfc 0xf0 0xe1 0xe7 0xe7 0xe2 0x60 0xc1 
  
: wall-2-6+56+8
    0x8f 0xf 0x8f 0xe 0x0 0x7 0x7 0x7 
  
: wall-2-6+56+16
    0x7 0x7 0x3 0x1 0x1e 0xf 0xf 0x7 
  
: wall-2-6+56+24
    0x3 0x1 0x4 0x7 0x7 0x1 0x0 0x0 
  
: wall-2+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0x0 
  
: wall-2+16+8
    0x18 0x3d 0x0 0x31 0x7b 0xbb 0x0 0x79 
  
: wall-2+16+16
    0x3d 0x1c 0x0 0xd7 0x73 0x0 0x1c 0xc 
  
: wall-2+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-2+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0x0 
  
: wall-2+24+8
    0x79 0xf3 0x0 0xf7 0xf7 0xf7 0x0 0xf9 
  
: wall-2+24+16
    0xfb 0xfb 0x0 0xcf 0xcf 0x0 0xf3 0x71 
  
: wall-2+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-2+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0x0 
  
: wall-2+32+8
    0xcf 0xef 0x0 0xe7 0xf7 0xf7 0x0 0xef 
  
: wall-2+32+16
    0xef 0xcf 0x0 0x7d 0x79 0x0 0xdf 0xcf 
  
: wall-2+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-2+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0x0 
  
: wall-2+40+8
    0x38 0x9c 0x0 0xcc 0xde 0x9f 0x0 0x9e 
  
: wall-2+40+16
    0xbc 0x38 0x0 0xeb 0xcc 0x0 0xbc 0x38 
  
: wall-2+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: wall-3+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3+16+8
    0x3f 0x2 0x40 0x6a 0x5 0xb0 0x25 0xa 
  
: wall-3+16+16
    0x40 0x2 0xa1 0x2 0x6d 0x40 0x0 0x0 
  
: wall-3+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-3+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3+24+8
    0xff 0xff 0x0 0x2a 0x54 0x0 0x1d 0xaa 
  
: wall-3+24+16
    0x0 0xa2 0x9 0x54 0x3a 0x0 0x0 0x0 
  
: wall-3+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-3+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3+32+8
    0xff 0xff 0x0 0xa2 0x55 0x0 0x51 0xaa 
  
: wall-3+32+16
    0x0 0x95 0x28 0x44 0xaa 0x0 0x0 0x0 
  
: wall-3+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-3+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3+40+8
    0xfc 0x40 0x2 0x96 0x60 0xd 0x44 0xf0 
  
: wall-3+40+16
    0x2 0x40 0x85 0x40 0xb6 0x2 0x0 0x0 
  
: wall-3+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: wall-3-3+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3-3+16+8
    0x7f 0x55 0x0 0x2a 0x55 0x0 0x65 0x12 
  
: wall-3-3+16+16
    0x0 0x2a 0x91 0x42 0x25 0x0 0x0 0x0 
  
: wall-3-3+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-3-3+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3-3+24+8
    0xff 0xff 0x0 0x2a 0x54 0x0 0x1d 0xaa 
  
: wall-3-3+24+16
    0x0 0xa2 0x9 0x54 0x3a 0x0 0x0 0x0 
  
: wall-3-3+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-3-3+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3-3+32+8
    0xff 0xff 0x0 0xa2 0x55 0x0 0x51 0xaa 
  
: wall-3-3+32+16
    0x0 0x95 0x28 0x44 0xaa 0x0 0x0 0x0 
  
: wall-3-3+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-3-3+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3-3+40+8
    0xfe 0x94 0x0 0x94 0x6a 0x0 0x46 0xe8 
  
: wall-3-3+40+16
    0x0 0x54 0x89 0x42 0xa4 0x0 0x0 0x0 
  
: wall-3-3+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: wall-3-4+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3-4+16+8
    0x7f 0x7a 0x28 0x2 0x1 0x20 0x1 0x42 
  
: wall-3-4+16+16
    0x10 0x22 0x1 0x2 0x1 0x0 0x0 0x0 
  
: wall-3-4+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-3-4+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3-4+24+8
    0xff 0xff 0x0 0x2a 0x54 0x0 0x1d 0xaa 
  
: wall-3-4+24+16
    0x0 0xa2 0x9 0x54 0x3a 0x0 0x0 0x0 
  
: wall-3-4+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-3-4+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3-4+32+8
    0xff 0xff 0x0 0xa2 0x55 0x0 0x51 0xaa 
  
: wall-3-4+32+16
    0x0 0x95 0x28 0x44 0xaa 0x0 0x0 0x0 
  
: wall-3-4+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-3-4+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3-4+40+8
    0xfe 0x5c 0x14 0x80 0x40 0x2 0x40 0xc8 
  
: wall-3-4+40+16
    0x4 0x40 0x88 0x40 0x80 0x0 0x0 0x0 
  
: wall-3-4+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: wall-3-5+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3-5+16+8
    0x3f 0x5a 0x28 0x52 0x1 0x0 0x1 0x2 
  
: wall-3-5+16+16
    0x0 0x2 0x1 0x2 0x1 0x0 0x0 0x0 
  
: wall-3-5+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-3-5+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3-5+24+8
    0xff 0xff 0x0 0x2a 0x54 0x0 0x1d 0xaa 
  
: wall-3-5+24+16
    0x0 0xa2 0x9 0x54 0x3a 0x0 0x0 0x0 
  
: wall-3-5+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-3-5+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3-5+32+8
    0xff 0xff 0x0 0xa2 0x55 0x0 0x51 0xaa 
  
: wall-3-5+32+16
    0x0 0x95 0x28 0x44 0xaa 0x0 0x0 0x0 
  
: wall-3-5+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-3-5+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3-5+40+8
    0xfc 0x5a 0x14 0x8a 0x40 0x0 0x40 0xc0 
  
: wall-3-5+40+16
    0x0 0x40 0x80 0x40 0x80 0x0 0x0 0x0 
  
: wall-3-5+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: wall-3-6+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3-6+16+8
    0x3f 0x5a 0x28 0x12 0x21 0x0 0x1 0x2 
  
: wall-3-6+16+16
    0x0 0x2 0x1 0x2 0x1 0x0 0x0 0x0 
  
: wall-3-6+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-3-6+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3-6+24+8
    0xff 0xff 0x0 0x2a 0x54 0x0 0x1d 0xaa 
  
: wall-3-6+24+16
    0x0 0xa2 0x9 0x54 0x3a 0x0 0x0 0x0 
  
: wall-3-6+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-3-6+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3-6+32+8
    0xff 0xff 0x0 0xa2 0x55 0x0 0x51 0xaa 
  
: wall-3-6+32+16
    0x0 0x95 0x28 0x44 0xaa 0x0 0x0 0x0 
  
: wall-3-6+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-3-6+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-3-6+40+8
    0xfc 0x5a 0x14 0x88 0x44 0x0 0x40 0xc0 
  
: wall-3-6+40+16
    0x0 0x40 0x80 0x40 0x80 0x0 0x0 0x0 
  
: wall-3-6+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: wall-4+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4+16+8
    0x3f 0x2 0x40 0x68 0x0 0xb0 0x20 0x9 
  
: wall-4+16+16
    0x42 0x12 0xa0 0x0 0x68 0x40 0x0 0x0 
  
: wall-4+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-4+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4+24+8
    0xff 0xff 0x77 0xa 0x0 0x85 0x20 0x0 
  
: wall-4+24+16
    0x8 0x11 0xa2 0x0 0x0 0x0 0x0 0x0 
  
: wall-4+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-4+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4+32+8
    0xff 0xff 0xee 0xb0 0x0 0x1 0x28 0x44 
  
: wall-4+32+16
    0x20 0x0 0x1 0x0 0x0 0x0 0x0 0x0 
  
: wall-4+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-4+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4+40+8
    0xfc 0x40 0x2 0x16 0x0 0xd 0x4 0x90 
  
: wall-4+40+16
    0x42 0x48 0x5 0x0 0x16 0x2 0x0 0x0 
  
: wall-4+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: wall-4-3+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4-3+16+8
    0x7f 0x55 0x0 0x2c 0x50 0x0 0x64 0x15 
  
: wall-4-3+16+16
    0x0 0x28 0x94 0x40 0x20 0x0 0x0 0x0 
  
: wall-4-3+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-3+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4-3+24+8
    0xff 0xff 0x77 0xa 0x0 0x85 0x20 0x0 
  
: wall-4-3+24+16
    0x8 0x11 0xa2 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-3+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-3+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4-3+32+8
    0xff 0xff 0xee 0xb0 0x0 0x1 0x28 0x44 
  
: wall-4-3+32+16
    0x20 0x0 0x1 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-3+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-3+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4-3+40+8
    0xfe 0x94 0x0 0x34 0xa 0x0 0x26 0xa8 
  
: wall-4-3+40+16
    0x0 0x14 0x29 0x2 0x4 0x0 0x0 0x0 
  
: wall-4-3+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: wall-4-4+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4-4+16+8
    0x3f 0x2 0x40 0x68 0x0 0xb0 0x20 0x9 
  
: wall-4-4+16+16
    0x40 0x10 0xa0 0x0 0x68 0x40 0x0 0x0 
  
: wall-4-4+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-4+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4-4+24+8
    0xff 0xff 0x77 0xa 0x0 0x5 0x20 0x0 
  
: wall-4-4+24+16
    0x88 0x11 0x22 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-4+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-4+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4-4+32+8
    0xff 0xff 0xee 0xb0 0x0 0x0 0x28 0x44 
  
: wall-4-4+32+16
    0x20 0x1 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-4+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-4+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4-4+40+8
    0xfc 0x40 0x2 0x16 0x0 0xd 0x84 0x10 
  
: wall-4-4+40+16
    0x2 0x8 0x5 0x0 0x16 0x2 0x0 0x0 
  
: wall-4-4+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: wall-4-5+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4-5+16+8
    0x3f 0x2 0x40 0x68 0x0 0xb0 0x20 0x8 
  
: wall-4-5+16+16
    0x40 0x10 0xa0 0x0 0x68 0x40 0x0 0x0 
  
: wall-4-5+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-5+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4-5+24+8
    0xff 0xff 0x77 0xa 0x0 0x5 0x20 0x0 
  
: wall-4-5+24+16
    0x8 0x11 0x22 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-5+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-5+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4-5+32+8
    0xff 0xff 0xee 0xb0 0x0 0x0 0x28 0x44 
  
: wall-4-5+32+16
    0x20 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-5+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-5+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4-5+40+8
    0xfc 0x40 0x2 0x16 0x0 0xd 0x4 0x10 
  
: wall-4-5+40+16
    0x2 0x8 0x5 0x0 0x16 0x2 0x0 0x0 
  
: wall-4-5+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: wall-4-6+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4-6+16+8
    0x3f 0x2 0x40 0x68 0x0 0xb0 0x20 0x8 
  
: wall-4-6+16+16
    0x40 0x10 0xa0 0x0 0x68 0x40 0x0 0x0 
  
: wall-4-6+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-6+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4-6+24+8
    0xff 0xff 0x77 0xa 0x0 0x5 0x20 0x0 
  
: wall-4-6+24+16
    0x8 0x11 0x22 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-6+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-6+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4-6+32+8
    0xff 0xff 0xee 0xb0 0x0 0x0 0x28 0x44 
  
: wall-4-6+32+16
    0x20 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-6+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-4-6+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-4-6+40+8
    0xfc 0x40 0x2 0x16 0x0 0xd 0x4 0x10 
  
: wall-4-6+40+16
    0x2 0x8 0x5 0x0 0x16 0x2 0x0 0x0 
  
: wall-4-6+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: wall-5+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5+16+8
    0x3f 0x2 0x40 0x68 0x0 0xb0 0x20 0x9 
  
: wall-5+16+16
    0x42 0x12 0xa0 0x0 0x68 0x40 0x0 0x0 
  
: wall-5+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5+24+8
    0xff 0xff 0x77 0xa 0x0 0x80 0x0 0x0 
  
: wall-5+24+16
    0x48 0x0 0x80 0x0 0x0 0x0 0x0 0x0 
  
: wall-5+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5+32+8
    0xff 0xff 0xee 0xb0 0x0 0x1 0x0 0x0 
  
: wall-5+32+16
    0x2 0x0 0x1 0x0 0x0 0x0 0x0 0x0 
  
: wall-5+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5+40+8
    0xfc 0x40 0x2 0x16 0x0 0xd 0x4 0x90 
  
: wall-5+40+16
    0x42 0x48 0x5 0x0 0x16 0x2 0x0 0x0 
  
: wall-5+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: wall-5-3+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-3+16+8
    0x7f 0x55 0x0 0x2c 0x50 0x0 0x64 0x15 
  
: wall-5-3+16+16
    0x0 0x28 0x94 0x40 0x20 0x0 0x0 0x0 
  
: wall-5-3+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-3+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-3+24+8
    0xff 0xff 0x77 0xa 0x0 0x80 0x0 0x0 
  
: wall-5-3+24+16
    0x48 0x0 0x80 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-3+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-3+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-3+32+8
    0xff 0xff 0xee 0xb0 0x0 0x1 0x0 0x0 
  
: wall-5-3+32+16
    0x2 0x0 0x1 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-3+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-3+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-3+40+8
    0xfe 0x94 0x0 0x34 0xa 0x0 0x26 0xa8 
  
: wall-5-3+40+16
    0x0 0x14 0x29 0x2 0x4 0x0 0x0 0x0 
  
: wall-5-3+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: wall-5-4+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-4+16+8
    0x3f 0x2 0x40 0x68 0x0 0xb0 0x20 0x9 
  
: wall-5-4+16+16
    0x40 0x10 0xa0 0x0 0x68 0x40 0x0 0x0 
  
: wall-5-4+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-4+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-4+24+8
    0xff 0xff 0x77 0xa 0x0 0x0 0x0 0x0 
  
: wall-5-4+24+16
    0x88 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-4+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-4+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-4+32+8
    0xff 0xff 0xee 0xb0 0x0 0x0 0x0 0x0 
  
: wall-5-4+32+16
    0x0 0x1 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-4+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-4+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-4+40+8
    0xfc 0x40 0x2 0x16 0x0 0xd 0x84 0x10 
  
: wall-5-4+40+16
    0x2 0x8 0x5 0x0 0x16 0x2 0x0 0x0 
  
: wall-5-4+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: wall-5-5-3+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-5-3+16+8
    0x7f 0x55 0x0 0x2c 0x50 0x0 0x64 0x15 
  
: wall-5-5-3+16+16
    0x0 0x28 0x94 0x40 0x20 0x0 0x0 0x0 
  
: wall-5-5-3+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-5-3+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-5-3+24+8
    0xff 0xff 0x77 0xa 0x0 0x80 0x0 0x0 
  
: wall-5-5-3+24+16
    0x8 0x0 0x80 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-5-3+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-5-3+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-5-3+32+8
    0xff 0xff 0xee 0xb0 0x0 0x1 0x0 0x0 
  
: wall-5-5-3+32+16
    0x0 0x0 0x1 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-5-3+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-5-3+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-5-3+40+8
    0xfe 0x94 0x0 0x34 0xa 0x0 0x26 0xa8 
  
: wall-5-5-3+40+16
    0x0 0x14 0x29 0x2 0x4 0x0 0x0 0x0 
  
: wall-5-5-3+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: wall-5-5+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-5+16+8
    0x3f 0x2 0x40 0x68 0x0 0xb0 0x20 0x9 
  
: wall-5-5+16+16
    0x42 0x12 0xa0 0x0 0x68 0x40 0x0 0x0 
  
: wall-5-5+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-5+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-5+24+8
    0xff 0xff 0x77 0xa 0x0 0x80 0x0 0x0 
  
: wall-5-5+24+16
    0x8 0x0 0x80 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-5+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-5+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-5+32+8
    0xff 0xff 0xee 0xb0 0x0 0x1 0x0 0x0 
  
: wall-5-5+32+16
    0x0 0x0 0x1 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-5+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-5+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-5+40+8
    0xfc 0x40 0x2 0x16 0x0 0xd 0x4 0x90 
  
: wall-5-5+40+16
    0x42 0x48 0x5 0x0 0x16 0x2 0x0 0x0 
  
: wall-5-5+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: wall-5-6+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-6+16+8
    0x3f 0x2 0x40 0x68 0x0 0xb0 0x20 0x9 
  
: wall-5-6+16+16
    0x42 0x12 0xa0 0x0 0x68 0x40 0x0 0x0 
  
: wall-5-6+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-6+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-6+24+8
    0xff 0xff 0x77 0xa 0x0 0x80 0x0 0x0 
  
: wall-5-6+24+16
    0x0 0x0 0x80 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-6+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-6+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-6+32+8
    0xff 0xff 0xee 0xb0 0x0 0x1 0x0 0x0 
  
: wall-5-6+32+16
    0x0 0x0 0x1 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-6+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-6+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-6+40+8
    0xfc 0x40 0x2 0x16 0x0 0xd 0x4 0x90 
  
: wall-5-6+40+16
    0x42 0x48 0x5 0x0 0x16 0x2 0x0 0x0 
  
: wall-5-6+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: wall-5-6-3+16+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-6-3+16+8
    0x7f 0x55 0x0 0x2c 0x50 0x0 0x64 0x15 
  
: wall-5-6-3+16+16
    0x0 0x28 0x94 0x40 0x20 0x0 0x0 0x0 
  
: wall-5-6-3+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-6-3+24+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-6-3+24+8
    0xff 0xff 0x77 0xa 0x0 0x80 0x0 0x0 
  
: wall-5-6-3+24+16
    0x8 0x0 0x80 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-6-3+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-6-3+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-6-3+32+8
    0xff 0xff 0xee 0xb0 0x0 0x1 0x0 0x0 
  
: wall-5-6-3+32+16
    0x0 0x0 0x1 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-6-3+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: wall-5-6-3+40+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: wall-5-6-3+40+8
    0xfe 0x94 0x0 0x34 0xa 0x0 0x26 0xa8 
  
: wall-5-6-3+40+16
    0x0 0x14 0x29 0x2 0x4 0x0 0x0 0x0 
  
: wall-5-6-3+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  

: sprites+0+0
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+0+8
    0x0 0x0 0xf 0x7 0x0 0x0 0x0 0x0 
  
: sprites+0+16
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x1 
  
: sprites+0+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+8+0
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+8+8
    0x0 0x0 0xf0 0xe0 0x0 0x0 0x0 0x0 
  
: sprites+8+16
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x80 
  
: sprites+8+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+16+0
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+16+8
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+16+16
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+16+24
    0x0 0x0 0x0 0x0 0x1 0x0 0x0 0x0 
  
: sprites+24+0
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+24+8
    0x0 0x0 0xc0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+24+16
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+32+0
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+32+8
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+32+16
    0x0 0x0 0x0 0x0 0x0 0x0 0x1 0x3 
  
: sprites+32+24
    0x1 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+40+0
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+40+8
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+40+16
    0x0 0x0 0x0 0x0 0x0 0x0 0x80 0xc0 
  
: sprites+40+24
    0x80 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+48+0
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+48+8
    0x0 0x0 0x7 0xf 0xf 0x7 0x0 0x0 
  
: sprites+48+16
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+48+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+56+0
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+56+8
    0x0 0x0 0xe0 0xf0 0xf0 0xe0 0x0 0x0 
  
: sprites+56+16
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites+56+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
  
: viper4+16+0
    0xff 0xff 0xff 0xff 0xe0 0x0 0x0 0xa 
  
: viper4+16+8
    0xa 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: viper4+16+16
    0x0 0x0 0x80 0x0 0x40 0x40 0x0 0x4 
  
: viper4+16+24
    0x4 0x2 0x2 0x2 0x2 0x2 0x1 0x1 
  
: viper4+24+0
    0xff 0xff 0xff 0xff 0x3f 0x7 0x0 0x0 
  
: viper4+24+8
    0x0 0x0 0x0 0x0 0x10 0x70 0x30 0x30 
  
: viper4+24+16
    0x30 0x23 0x23 0x23 0x3 0x3 0x3 0x3 
  
: viper4+24+24
    0x3 0x3 0x3 0x3 0x7 0x5 0x4 0x4 
  
: viper4+32+0
    0xff 0xff 0xff 0xfc 0xe0 0x0 0x0 0x0 
  
: viper4+32+8
    0x0 0x0 0x0 0x20 0x30 0x38 0x30 0x30 
  
: viper4+32+16
    0x10 0x10 0x10 0x10 0x0 0x0 0x0 0x0 
  
: viper4+32+24
    0x0 0x0 0x0 0x0 0x0 0x80 0x80 0x80 
  
: viper4+40+0
    0xff 0xff 0xff 0x7 0x1 0x1 0xa1 0xa0 
  
: viper4+40+8
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: viper4+40+16
    0x2 0x0 0x5 0x4 0x6 0x2 0x2 0x2 
  
: viper4+40+24
    0x2 0x2 0x1 0x1 0x1 0x1 0x1 0x1 
  
  
: viper-neck+16+0
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: viper-neck+16+8
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x1 
  
: viper-neck+16+16
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: viper-neck+16+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x1 
  
: viper-neck+24+0
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: viper-neck+24+8
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: viper-neck+24+16
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: viper-neck+24+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: viper-neck+32+0
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: viper-neck+32+8
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: viper-neck+32+16
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: viper-neck+32+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: viper-neck+40+0
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: viper-neck+40+8
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x1 
  
: viper-neck+40+16
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: viper-neck+40+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x1 
  
  
: sprites2+48+0
    0x0 0x44 0x18 0xa0 0x70 0x0 0x0 0x0 
  
: sprites2+48+8
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites2+48+16
    0xf8 0xe0 0x0 0xe0 0xe0 0x0 0xe0 0x60 
  
: sprites2+48+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites2+56+0
    0x0 0x3a 0x11 0x18 0x15 0x0 0x0 0x0 
  
: sprites2+56+8
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
  
: sprites2+56+16
    0x1f 0x7 0x0 0x5 0x5 0x0 0x7 0x7 
  
: sprites2+56+24
    0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 

: stats-screen+0+0
    0xff 0xaf 0xad 0xda 0xda 0xdd 0xff 0xaf 
  
: stats-screen+0+8
    0xad 0xda 0xda 0xdd 0xff 0xaf 0xad 0xda 
  
: stats-screen+0+16
    0xda 0xdd 0xff 0xff 0xff 0xff 0xff 0xff 
  
: stats-screen+0+24
    0xff 0xc0 0x90 0x20 0x7e 0x20 0x90 0xc0 
  
: stats-screen+8+0
    0xff 0xff 0xae 0xad 0xad 0xce 0xff 0xfe 
  
: stats-screen+8+8
    0xad 0xac 0xad 0xcd 0xff 0xff 0xae 0xad 
  
: stats-screen+8+16
    0xac 0xce 0xff 0xff 0xff 0xff 0xfe 0xfe 
  
: stats-screen+8+24
    0xff 0x0 0x30 0x42 0x45 0x55 0x32 0x0 
  
: stats-screen+16+0
    0xff 0x5f 0x7b 0x55 0x53 0x59 0xff 0xff 
  
: stats-screen+16+8
    0xda 0xaa 0xaa 0xdc 0xff 0xfd 0xcc 0x55 
  
: stats-screen+16+16
    0xd5 0x56 0xff 0xff 0x7e 0x7e 0xff 0xfe 
  
: stats-screen+16+24
    0xff 0x0 0x20 0x31 0x2a 0x2a 0x31 0x0 
  
: stats-screen+24+0
    0xff 0xdf 0x9f 0x57 0x5f 0x97 0xff 0xfe 
  
: stats-screen+24+8
    0x9c 0xaa 0xaa 0xac 0xff 0xff 0xda 0xa9 
  
: stats-screen+24+16
    0x9b 0xcb 0xff 0xff 0x6e 0xd5 0x4d 0x66 
  
: stats-screen+24+24
    0xff 0x0 0x4 0x94 0xa5 0xa6 0x95 0x0 
  
: stats-screen+32+0
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: stats-screen+32+8
    0xff 0xbf 0xff 0xbf 0xff 0xfe 0xdc 0xaa 
  
: stats-screen+32+16
    0x9a 0xcc 0xff 0xff 0xad 0x9a 0xb9 0xbc 
  
: stats-screen+32+24
    0xff 0x7e 0x7e 0x7e 0x7e 0x7e 0x7e 0x7e 
  
: stats-screen+40+0
    0xff 0xfd 0xfc 0xfd 0xfd 0xfe 0xff 0xff 
  
: stats-screen+40+8
    0xbf 0xbf 0x7f 0x7f 0xff 0xff 0xff 0xbf 
  
: stats-screen+40+16
    0xff 0xbf 0xff 0xbf 0x9c 0xba 0xba 0xdc 
  
: stats-screen+40+24
    0xff 0x0 0xe0 0x92 0x95 0x96 0x93 0x0 
  
: stats-screen+48+0
    0xff 0xbf 0xe5 0xaa 0xae 0xae 0xff 0xfe 
  
: stats-screen+48+8
    0xb7 0x6a 0x6a 0xb6 0xff 0xff 0xff 0xff 
  
: stats-screen+48+16
    0xff 0xff 0xff 0xff 0xad 0x9a 0xb9 0xbc 
  
: stats-screen+48+24
    0xff 0x0 0x4 0x56 0x24 0x24 0x52 0x0 
  
: stats-screen+56+0
    0xff 0xff 0xd9 0xab 0x9d 0xc9 0xff 0xff 
  
: stats-screen+56+8
    0x99 0xab 0xad 0xa9 0xff 0xff 0xff 0xff 
  
: stats-screen+56+16
    0xff 0xff 0xff 0xff 0xc9 0xab 0xad 0xc9 
  
: stats-screen+56+24
    0xff 0x3 0x9 0x4 0x7e 0x4 0x9 0x3 
  

: end-of-game-screen+0+0
    0xff 0xff 0xee 0xee 0xea 0xea 0xf5 0xff 
  
: end-of-game-screen+0+8
    0xfd 0xfc 0xfd 0xfd 0xfe 0xff 0xff 0xfe 
  
: end-of-game-screen+0+16
    0xfd 0xfd 0xfe 0xff 0xfe 0xff 0xff 0xff 
  
: end-of-game-screen+0+24
    0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: end-of-game-screen+8+0
    0xff 0xff 0xcd 0xb5 0xb5 0xb5 0xce 0xff 
  
: end-of-game-screen+8+8
    0xbf 0x9d 0xaa 0xa9 0xac 0xff 0xff 0x4b 
  
: end-of-game-screen+8+16
    0x55 0x5d 0x5d 0xff 0x7f 0x6e 0x55 0x4d 
  
: end-of-game-screen+8+24
    0x66 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: end-of-game-screen+16+0
    0xff 0xff 0xd6 0xd6 0x57 0x5f 0xb7 0xff 
  
: end-of-game-screen+16+8
    0xff 0xee 0xd5 0xe5 0xce 0xff 0xfe 0x93 
  
: end-of-game-screen+16+16
    0x5a 0x56 0x92 0xff 0xff 0x56 0x55 0x54 
  
: end-of-game-screen+16+24
    0x6e 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: end-of-game-screen+24+0
    0xff 0xff 0xbf 0xb6 0x6a 0x6a 0x77 0xff 
  
: end-of-game-screen+24+8
    0xff 0x4b 0x55 0x5d 0x5d 0xff 0xff 0x9d 
  
: end-of-game-screen+24+16
    0xaa 0xac 0xa9 0xff 0xff 0xf3 0x6b 0xeb 
  
: end-of-game-screen+24+24
    0x73 0xff 0xff 0xfe 0xff 0xfd 0xfe 0xff 
  
: end-of-game-screen+32+0
    0xff 0xff 0xfa 0xb7 0xb2 0xb6 0x36 0xff 
  
: end-of-game-screen+32+8
    0xf6 0xb7 0x57 0x3f 0x97 0xff 0xb3 0xb5 
  
: end-of-game-screen+32+16
    0xb3 0xf7 0xb7 0xff 0xff 0x5b 0x35 0x73 
  
: end-of-game-screen+32+24
    0x79 0xff 0xff 0xbf 0xff 0xdf 0x3f 0xff 
  
: end-of-game-screen+40+0
    0xff 0xff 0xfb 0x9e 0xaa 0xab 0xaa 0xff 
  
: end-of-game-screen+40+8
    0x2f 0x67 0x6a 0x6a 0x6b 0xff 0x3f 0xb7 
  
: end-of-game-screen+40+16
    0xaa 0xa6 0xb3 0xff 0xf7 0x5e 0x55 0x54 
  
: end-of-game-screen+40+24
    0xb6 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: end-of-game-screen+48+0
    0xff 0xff 0xdf 0x4e 0xd5 0x54 0x56 0xff 
  
: end-of-game-screen+48+8
    0xed 0x25 0xaf 0xaf 0x37 0xff 0xff 0x26 
  
: end-of-game-screen+48+16
    0xad 0xb4 0x26 0xff 0xff 0xdd 0x5d 0xd5 
  
: end-of-game-screen+48+24
    0x6b 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
: end-of-game-screen+56+0
    0xff 0xff 0xf7 0xe7 0x57 0xd7 0x67 0xff 
  
: end-of-game-screen+56+8
    0xff 0x3f 0x7f 0xbf 0x3f 0xff 0xff 0xff 
  
: end-of-game-screen+56+16
    0x7f 0xff 0x7f 0xff 0x7f 0x7f 0x7f 0xff 
  
: end-of-game-screen+56+24
    0x7f 0xff 0xff 0xff 0xff 0xff 0xff 0xff 
  
#####################
# Pre-XOR the map finish tunnel
# Concept taken from https://github.com/JohnEarnest/Octo/blob/gh-pages/docs/MetaProgramming.md
# But adapted for 4 colours and offset 16x16 sprites

:macro row-xor A B C ptr {
  :byte { ( @ A + ptr ) ^ ( @ B + ptr + 1 ) }
  :byte { ( @ A + ptr + 1 ) ^ ( @ C + ptr ) }
}

:macro offset-xor_ A B C {
  row-xor A B C 0   row-xor A B C 2
  row-xor A B C 4   row-xor A B C 6
  row-xor A B C 8   row-xor A B C 10
  row-xor A B C 12  row-xor A B C 14

  row-xor A B C 16  row-xor A B C 18
  row-xor A B C 20  row-xor A B C 22
  row-xor A B C 24  row-xor A B C 26
  row-xor A B C 28  row-xor A B C 30
}

:macro offset-xor A B C {
  # Plane 1
  offset-xor_ A B C
  # Plane 2
  :calc A { A + 32 }
  :calc B { B + 32 }
  :calc C { C + 32 }
  offset-xor_ A B C
}

: finish-far-xor
  offset-xor sprites2+48+0 wall-3+16+16 wall-3+32+16

: finish-near-xor
  offset-xor sprites2+48+16 wall-2+16+16 wall-2+32+16
#####################
# Nodes and leafs - the binary tree that does the decision making
# This needs to be below the 3D image data in order to be able to reference the
# labels in macros.

# Convenience macros and constants

:const numc14nodes 14
:const numc23nodes 26
:const numc14leafs 14
:const numc23leafs 27

:macro coord X Y {
  :byte { ( ( X + 1 ) << 4 ) | Y }
}

:macro c1node X { :byte { X } }
:macro c2node X { :byte { numc14nodes + X } }
:macro c3node X { :byte { numc14nodes + numc23nodes + X } }
:macro c4node X { :byte { numc14nodes + numc23nodes + numc23nodes + X } }

:macro c1leaf X { :byte { 0x80 + X } }
:macro c2leaf X { :byte { 0x80 + numc14leafs + X } }
:macro c3leaf X { :byte { 0x80 + numc14leafs + numc23leafs + X } }
:macro c4leaf X { :byte { 0x80 + numc14leafs + numc23leafs + numc23leafs + X } }


# Nodes represent decisions: given this point relative to the player, if there
# is a wall there or not, go to this node or leaf. The most significant bit of
# the target entry indicates if its a node (0) or a leaf (1). This
# implementation detail is hidden through the macros.
: nodes

: nodes-column-one
#        X Y  no wall   wall
  coord -1 0  c1node 3  c1node 1   # node 0
  coord  0 1  c1node 2  c1leaf 3   # node 1
  coord -1 1  c1node 9  c1leaf 0   # node 2
  coord  0 1  c1leaf 1  c1node 4   # node 3
  coord -1 1  c1node 5  c1leaf 4   # node 4
  coord -1 2  c1node 6  c1leaf 5   # node 5
  coord -1 3  c1node 7  c1leaf 6   # node 6
  coord -1 4  c1node 8  c1leaf 7   # node 7
  coord -1 5  c1leaf 9  c1leaf 8   # node 8
  coord  0 2  c1leaf 2  c1node 10  # node 9
  coord -1 2  c1node 11 c1leaf 2   # node 10
  coord -1 3  c1node 12 c1leaf 10  # node 11
  coord -1 4  c1node 13 c1leaf 11  # node 12
  coord -1 5  c1leaf 13 c1leaf 12  # node 13

: nodes-column-two
#        X Y  no wall    wall
  coord  0 1  c2node 1   c2leaf 8   # node 0
  coord  0 2  c2node 2   c2leaf 9   # node 1
  coord -1 2  c2node 3   c2node 9   # node 2
  coord  0 3  c2node 4   c2node 18  # node 3
  coord  0 4  c2node 5   c2leaf 16  # node 4
  coord  0 5  c2node 6   c2node 8   # node 5
  coord -1 4  c2leaf 2   c2node 7   # node 6
  coord -1 5  c2leaf 1   c2leaf 1   # node 7
  coord -1 4  c2node 25  c2leaf 21  # node 8
  coord  0 3  c2node 10  c2leaf 10  # node 9
  coord -1 3  c2node 11  c2node 13  # node 10
  coord  0 4  c2node 12  c2node 21  # node 11
  coord  0 5  c2node 24  c2leaf 22  # node 12
  coord  0 4  c2node 14  c2leaf 15  # node 13
  coord -1 4  c2node 15  c2node 16  # node 14
  coord  0 5  c2leaf 6   c2node 23  # node 15
  coord  0 5  c2node 17  c2leaf 20  # node 16
  coord -1 5  c2leaf 7   c2leaf 0   # node 17
  coord -1 3  c2node 19  c2leaf 11  # node 18
  coord -1 4  c2node 20  c2leaf 12  # node 19
  coord -1 5  c2leaf 14  c2leaf 13  # node 20
  coord -1 4  c2node 22  c2leaf 17  # node 21
  coord -1 5  c2leaf 19  c2leaf 18  # node 22
  coord -1 5  c2leaf 25  c2leaf 23  # node 23
  coord -1 5  c2leaf 5   c2leaf 4   # node 24
  coord -1 5  c2leaf 26  c2leaf 24  # node 25

: nodes-column-three
#        X Y  no wall    wall
  coord  0 1  c3node 1   c3leaf 8   # node 0
  coord  0 2  c3node 2   c3leaf 9   # node 1
  coord  1 2  c3node 3   c3node 9   # node 2
  coord  0 3  c3node 4   c3node 18  # node 3
  coord  0 4  c3node 5   c3leaf 16  # node 4
  coord  0 5  c3node 6   c3node 8   # node 5
  coord  1 4  c3leaf 2   c3node 7   # node 6
  coord  1 5  c3leaf 3   c3leaf 1   # node 7
  coord  1 4  c3node 25  c3leaf 21  # node 8
  coord  0 3  c3node 10  c3leaf 10  # node 9
  coord  1 3  c3node 11  c3node 13  # node 10
  coord  0 4  c3node 12  c3node 21  # node 11
  coord  0 5  c3node 24  c3leaf 22  # node 12
  coord  0 4  c3node 14  c3leaf 15  # node 13
  coord  1 4  c3node 15  c3node 16  # node 14
  coord  0 5  c3leaf 6   c3node 23  # node 15
  coord  0 5  c3node 17  c3leaf 20  # node 16
  coord  1 5  c3leaf 7   c3leaf 0   # node 17
  coord  1 3  c3node 19  c3leaf 11  # node 18
  coord  1 4  c3node 20  c3leaf 12  # node 19
  coord  1 5  c3leaf 14  c3leaf 13  # node 20
  coord  1 4  c3node 22  c3leaf 17  # node 21
  coord  1 5  c3leaf 19  c3leaf 18  # node 22
  coord  1 5  c3leaf 25  c3leaf 23  # node 23
  coord  1 5  c3leaf 5   c3leaf 4   # node 24
  coord  1 5  c3leaf 26  c3leaf 24  # node 25

: nodes-column-four
#        X Y  no wall   wall
  coord  1 0  c4node 3  c4node 1   # node 0
  coord  0 1  c4node 2  c4leaf 3   # node 1
  coord  1 1  c4node 9  c4leaf 0   # node 2
  coord  0 1  c4leaf 1  c4node 4   # node 3
  coord  1 1  c4node 5  c4leaf 4   # node 4
  coord  1 2  c4node 6  c4leaf 5   # node 5
  coord  1 3  c4node 7  c4leaf 6   # node 6
  coord  1 4  c4node 8  c4leaf 7   # node 7
  coord  1 5  c4leaf 9  c4leaf 8   # node 8
  coord  0 2  c4leaf 2  c4node 10  # node 9
  coord  1 2  c4node 11 c4leaf 2   # node 10
  coord  1 3  c4node 12 c4leaf 10  # node 11
  coord  1 4  c4node 13 c4leaf 11  # node 12
  coord  1 5  c4leaf 13 c4leaf 12  # node 13


# Leafs represent images to be rendered. A path of nodes should always lead to
# a leaf. The leafs themselves are pointers to the right images.
: leafs

  # Column 1
  pointer hall-0+0+0      # leaf 0
  pointer hall-1+0+0      # leaf 1
  pointer hall-2+0+0      # leaf 2
  pointer wall-1+0+0      # leaf 3
  pointer wall-1-1+0+0    # leaf 4
  pointer wall-1-2+0+0    # leaf 5
  pointer wall-1-3+0+0    # leaf 6
  pointer wall-1-4+0+0    # leaf 7
  pointer wall-1-5+0+0    # leaf 8
  pointer wall-1-6+0+0    # leaf 9
  pointer wall-2-3+0+0    # leaf 10
  pointer wall-2-4+0+0    # leaf 11
  pointer wall-2-5+0+0    # leaf 12
  pointer wall-2-6+0+0    # leaf 13

  # Column 2
  pointer hall-0+16+0     # leaf 0
  pointer hall-3+16+0     # leaf 1
  pointer hall-3-5+16+0   # leaf 2
  pointer hall-3-6+16+0   # leaf 3
  pointer hall-4+16+0     # leaf 4
  pointer hall-4-6+16+0   # leaf 5
  pointer hall-5+16+0     # leaf 6
  pointer hall-6+16+0     # leaf 7
  pointer wall-1+16+0     # leaf 8
  pointer wall-2+16+0     # leaf 9
  pointer wall-3+16+0     # leaf 10
  pointer wall-3-3+16+0   # leaf 11
  pointer wall-3-4+16+0   # leaf 12
  pointer wall-3-5+16+0   # leaf 13
  pointer wall-3-6+16+0   # leaf 14
  pointer wall-4+16+0     # leaf 15
  pointer wall-4-3+16+0   # leaf 16
  pointer wall-4-4+16+0   # leaf 17
  pointer wall-4-5+16+0   # leaf 18
  pointer wall-4-6+16+0   # leaf 19
  pointer wall-5+16+0     # leaf 20
  pointer wall-5-3+16+0   # leaf 21
  pointer wall-5-4+16+0   # leaf 22
  pointer wall-5-5+16+0   # leaf 23
  pointer wall-5-5-3+16+0 # leaf 24
  pointer wall-5-6+16+0   # leaf 25
  pointer wall-5-6-3+16+0 # leaf 26

  # Column 3
  pointer hall-0+32+0     # leaf 0
  pointer hall-3+32+0     # leaf 1
  pointer hall-3-5+32+0   # leaf 2
  pointer hall-3-6+32+0   # leaf 3
  pointer hall-4+32+0     # leaf 4
  pointer hall-4-6+32+0   # leaf 5
  pointer hall-5+32+0     # leaf 6
  pointer hall-6+32+0     # leaf 7
  pointer wall-1+32+0     # leaf 8
  pointer wall-2+32+0     # leaf 9
  pointer wall-3+32+0     # leaf 10
  pointer wall-3-3+32+0   # leaf 11
  pointer wall-3-4+32+0   # leaf 12
  pointer wall-3-5+32+0   # leaf 13
  pointer wall-3-6+32+0   # leaf 14
  pointer wall-4+32+0     # leaf 15
  pointer wall-4-3+32+0   # leaf 16
  pointer wall-4-4+32+0   # leaf 17
  pointer wall-4-5+32+0   # leaf 18
  pointer wall-4-6+32+0   # leaf 19
  pointer wall-5+32+0     # leaf 20
  pointer wall-5-3+32+0   # leaf 21
  pointer wall-5-4+32+0   # leaf 22
  pointer wall-5-5+32+0   # leaf 23
  pointer wall-5-5-3+32+0 # leaf 24
  pointer wall-5-6+32+0   # leaf 25
  pointer wall-5-6-3+32+0 # leaf 26

  # Column 4
  pointer hall-0+48+0     # leaf 0
  pointer hall-1+48+0     # leaf 1
  pointer hall-2+48+0     # leaf 2
  pointer wall-1+48+0     # leaf 3
  pointer wall-1-1+48+0   # leaf 4
  pointer wall-1-2+48+0   # leaf 5
  pointer wall-1-3+48+0   # leaf 6
  pointer wall-1-4+48+0   # leaf 7
  pointer wall-1-5+48+0   # leaf 8
  pointer wall-1-6+48+0   # leaf 9
  pointer wall-2-3+48+0   # leaf 10
  pointer wall-2-4+48+0   # leaf 11
  pointer wall-2-5+48+0   # leaf 12
  pointer wall-2-6+48+0   # leaf 13

:org 0x200

#####################
# 3D Viper Maze
# An Octojam 7 entry
# By Timendus
# https://github.com/Timendus/3d-viper-maze

: main
  # Prepare virtual timers
  viper-delay := 1
  v0 := 1
  delay := v0

  # Start with training map
  send-player-back-to-start

: main-redraw
  clear
  render-3d
  mark-screen-clean
: main-loop
  clock-tick
  check-keys
  i := long dirty    # Is the screen dirty?
  load v0
  if v0 == 1 then jump main-redraw
  jump main-loop

# Handle those things that need attention in parallel to gameplay,
# like sound and enemy movement. A virtual timer implementation in the upper
# registers.
: clock-tick
  v0 := delay
  if v0 != 0 then return
  viper-delay -= 1
  if viper-delay == 0 then vipers
  v0 := 1
  delay := v0
  return

# Mark the screen dirty or clean to manage redraws

: mark-screen-dirty
  i := long dirty
  v0 := 1
  save v0
  return

: mark-screen-clean
  i := long dirty
  v0 := 0
  save v0
  return
#####################
# Transition screens and animations

: death-by-faraway-snake-animation
  # Animate snake attack abusing render-3d routines

  # Frame 0
  i := long sprites+32+0
  foreground-draw
  i := long sprites+16+16
  foreground-draw

  v1 := 20
  wait

  return

: death-by-snake-animation
  # Animate snake attack abusing render-3d routines

  # Frame 1
  i := long sprites+16+16
  foreground-draw
  i := long sprites+16+0
  foreground-draw

  v1 := 20
  wait

  # Frame 2
  clear
  i := long viper4+16+0
  v0 := 16
  render-column
  i := long viper4+32+0
  v0 := 32
  render-column
  column-one
  column-four

  # "Death"
  v1 := 30
  wait
  scroll-up-animation
  v1 := 50
  wait
  clear
  v1 := 30
  wait
  return

: snakeless-death-animation
  v1 := 30
  wait
  v0 := 0
  loop
    # scroll-up 1   # This needs a better animation now
    v1 := 10
    wait
    v0 += 1
    if v0 != 10 then
  again
  v1 := 50
  wait
  clear
  v1 := 30
  wait
  return

: scroll-up-animation
  v0 := 0
  loop
    # scroll-up 1   # This needs a better animation now
    i := long viper-neck+16+0
    v1 := 16
    v2 := 16
    sprite v1 v2 0
    i := long viper-neck+32+0
    v1 += 16
    sprite v1 v2 0
    v1 := 10
    wait
    # scroll-up 1   # This needs a better animation now
    i := long viper-neck+16+16
    v1 := 16
    v2 := 16
    sprite v1 v2 0
    i := long viper-neck+32+16
    v1 += 16
    sprite v1 v2 0
    v1 := 10
    wait
    v0 += 1
    if v0 != 5 then
  again
  return

: wait
  delay := v1
  loop
    v1 := delay
    if v1 != 0 then
  again
  return

: default-bitmap-wait
  bitmap-to-screen
  # And wait for a key press
  wait-key-release
  wait-key-press
  jump wait-key-release

: map-stats-screen
  # Render background
  i := long stats-screen+0+0
  bitmap-to-screen
  # Render stats
  i := long game-stats
  load v2
  v5 := v1 # Old get-number subroutine used to mess up v1, can be refactored away now
  # Coins
  i := hex v0
  v3 := 36
  v4 := 7
  sprite v3 v4 5
  map-metadata-start
  v0 := 3
  i += v0
  load v0
  i := hex v0
  v3 := 43
  sprite v3 v4 5
  # Secrets
  v0 := v2
  i := hex v0
  v3 := 11
  v4 := 19
  sprite v3 v4 5
  map-metadata-start
  v0 := 2
  i += v0
  load v0
  i := hex v0
  v3 := 18
  sprite v3 v4 5
  # Deaths
  i := long bcd-pad
  bcd v5
  v3 := 33
  v4 := 1
  i := long bcd-pad
  load v2
  v5 := v1 # Old get-number subroutine used to mess up v1, can be refactored away now
  if v0 == 0 then jump map-stats-skip-digit-one
  i := hex v0
  sprite v3 v4 5
: map-stats-skip-digit-one
  v3 += 4
  if v1 == 0 then jump map-stats-skip-digit-two
  v0 := v5
  i := hex v0
  sprite v3 v4 5
: map-stats-skip-digit-two
  v3 += 4
  v0 := v2
  i := hex v0
  sprite v3 v4 5
: map-stats-wait-key
  wait-key-release
  wait-key-press
  if vA == OCTO_KEY_A then jump map-stats-go-back
  if vA == OCTO_KEY_D then jump map-stats-next
  jump map-stats-wait-key
: map-stats-next
  map-metadata-start
  load v1
  v2 := v0
  v2 |= v1
  if v2 == 0 then jump end-of-game
  select-map
  i := long game-stats
  v0 := 0
  v1 := 0
  v2 := 0
  save v2
: map-stats-go-back
  send-player-back-to-start
  jump wait-key-release

: end-of-game
  i := long end-of-game-screen+0+0
  bitmap-to-screen
  loop
    clock-tick
  again

: bitmap-to-screen
  clear
  v0 := 0
  v2 := 15
  v3 := 1
: bitmap-to-screen-loop
  v1 := 1
  i += v3
  sprite v0 v1 15
  i += v2
  v1 := 16
  sprite v0 v1 15
  i += v2
  i += v3
  v0 += 8

  v1 := 1
  i += v3
  sprite v0 v1 15
  i += v2
  v1 := 16
  sprite v0 v1 15
  i += v2
  i += v3
  v0 += 8

  if v0 != 64 then jump bitmap-to-screen-loop
  return
#####################
# Look at place (v3 - 1, v4) relative to the player
# Return value at that position in v0
: look-ahead
  i := long player
  load v2
  if v2 == 0 then jump look-ahead-up
  if v2 == 1 then jump look-ahead-right
  if v2 == 2 then jump look-ahead-down
  # Else fall through
: look-ahead-left
  v0 -= v4
  v1 += 1
  v1 -= v3
  jump map-get
: look-ahead-right
  v0 += v4
  v1 -= 1
  v1 += v3
  jump map-get
: look-ahead-up
  v0 -= 1
  v0 += v3
  v1 -= v4
  jump map-get
: look-ahead-down
  v0 += 1
  v0 -= v3
  v1 += v4
  jump map-get

#####################
# Query the map for the value at a given position
# Input: X in v0, Y in v1 (destructive)
# Output: map value in v0
: map-get
  map-point
  load v0
  return

# Input: X in v0, Y in v1 (destructive)
# Output: i points to right place on map
# Destroys v0, v1, v2, v3
: map-point
  v2 := v0
  v3 := v1
  map-start
  i += v2
  v3 <<= v3
  v3 <<= v3
  v3 <<= v3
  v3 <<= v3
  i += v3
  return

# Destroys v0, v1
: map-start
  i := long current-map
  load v1
  i := map-point-smc
  save v1
  0xF0 0x00 # i := long ...
  : map-point-smc
  0 0
  return

# Destroys v0, v1
: map-metadata-start
  map-start
  v0 := 128
  i += v0
  return

#####################
# Map switching routines
# `select-map` loads the right map and player position

# Input: Address of map 'unpacked' in v0 and v1
: select-map
  # Make new map the current map
  i := long current-map
  save v1
  # Fall through

: send-player-back-to-start
  v4 := 0
  v5 := 0
: select-map-loop
  v0 := v4
  v1 := v5
  map-get
  if v0 == 0x02 then jump select-map-start-found
  v4 += 1
  if v4 != 15 then jump select-map-loop
  v4 := 0
  v5 += 1
  jump select-map-loop
: select-map-start-found
  # Put the player in the start position (direction is fixed)
  i := long player
  v0 := v4
  v1 := v5
  v2 := 1
  save v2
  return
#####################
# Render the map to the screen in pseudo-3D
# (for the actual gameplay)
: render-3d
  column-two
    clock-tick
  column-three
    clock-tick
  foreground
    clock-tick
  column-one
    clock-tick
  column-four
    clock-tick
  return

: column-one
  i := long nodes-column-one
  find-sprite
  v0 := 0
  jump render-column

: column-two
  i := long nodes-column-two
  find-sprite
  v0 := 16
  jump render-column

: column-three
  i := long nodes-column-three
  find-sprite
  v0 := 32
  jump render-column

: column-four
  i := long nodes-column-four
  find-sprite
  v0 := 48
  # Fall through

: render-column
  v2 := 15
  v3 := 1

  v1 := 1
  i += v3
  sprite v0 v1 15
  i += v2
  v1 := 16
  sprite v0 v1 15
  i += v2
  i += v3
  v0 += 8

  v1 := 1
  i += v3
  sprite v0 v1 15
  i += v2
  v1 := 16
  sprite v0 v1 15
  return

: foreground
  v4 := 1
  foreground-look
  if v0 == 1 then jump foreground-first-place-taken # We can't see through walls
  if v0 == 3 then jump finish-near
  if v0 == 4 then jump button-near
  if v0 == 5 then jump viper-near
  if v0 == 6 then jump coin-near
: foreground-far
  v4 := 2
  foreground-look
  if v0 == 3 then jump finish-far
  if v0 == 4 then jump button-far
  if v0 == 5 then jump viper-far
  if v0 == 6 then jump coin-far
  return

: foreground-look
  v3 := 1
  look-ahead
  v1 := 0x07
  v0 &= v1
  return

: finish-far   i := long finish-far-xor  foreground-draw  return
: finish-near  i := long finish-near-xor foreground-draw  jump foreground-far
: button-far   i := long sprites+0+16    foreground-draw  return
: button-near  i := long sprites+0+0     foreground-draw  foreground-first-place-taken  jump foreground-far
: viper-far    i := long sprites+32+0    foreground-draw  return
: viper-near   i := long sprites+16+16   foreground-draw  foreground-first-place-taken  jump foreground-far
: coin-far     i := long sprites+32+16   foreground-draw  return
: coin-near    i := long sprites+48+0    foreground-draw  foreground-first-place-taken  jump foreground-far

: foreground-draw
  v0 := 24
  v1 := 16
  sprite v0 v1 15
  i += v1
  i += v1
  v0 := 32
  sprite v0 v1 15
  return

: foreground-first-place-taken
  # This can be refactored away
  return

#####################
# This routine walks through the binary tree with nodes and leafs
# Input: i pointing to a node
# Output: i pointing to the image to be rendered
: find-sprite
  # Load this node and find what's there
  load v2
  v5 := v1
  v6 := v2
  # Coordinates are stored together in first byte, so unpack
  v1 := 0x0F
  v4 := v0
  v4 &= v1
  v0 >>= v0
  v0 >>= v0
  v0 >>= v0
  v0 >>= v0
  v0 &= v1
  v3 := v0
  look-ahead
  # Did we encounter a wall?
  if v0 == 1 begin
    v0 := v6
  else
    v0 := v5
  end
  # Is the next step a node or a leaf?
  v1 := 0x80
  v2 := v0
  v2 &= v1
  if v2 == 0x80 begin
    # Next is a leaf, extract the pointer
    i := long leafs
    v1 := 0b01111111
    v0 &= v1 # AND out the leaf indicator bit
    v0 <<= v0
    i += v0
    load v1
    # We now have the address of the leaf image in v0 and v1
    # Use self-modifying code trick to (long) load this address in `i`:
    i := find-sprite-smc
    save v1
    0xF0 0x00 # i := long ...
: find-sprite-smc
    0 0
    return
  else
    # Next is a node, load it and restart
    i := long nodes
    i += v0
    i += v0
    i += v0
    jump find-sprite
  end
#####################
# Show the map on screen (top down) with a blinking player position
# (as an in-game help and for debugging)
# Pressing 1 or Q exits the mini map and returns to normal gameplay
: mini-map
  wait-key-release
  clear
  render-map
: mini-map-loop
  render-player
  v0 := 20
  delay := v0
: mini-map-delay-loop
  v0 := OCTO_KEY_1
  if v0 key then jump exit-from-map
  v0 := OCTO_KEY_Q
  if v0 key then jump exit-from-map
  v0 := delay
  if v0 == 0 then jump mini-map-loop
  jump mini-map-delay-loop

: render-map
  :alias X v6
  :alias Y v7
  X := 0
  Y := 0
: render-map-loop
  # Look up value at X,Y
  v0 := X
  v1 := Y
  map-get
  # Don't show tile if its hidden
  v1 := 0b00001000
  v2 := 0b00000111
  v1 &= v0
  v2 &= v0
  if v1 == 0b00001000 begin
    # Hidden normal stuff looks like hallway
    v0 := 0x00
    # Hidden hallways look like walls
    if v2 == 0x00 then v0 := 0x01
    # Hidden coins look like walls
    if v2 == 0x06 then v0 := 0x01
  end
  # Mask out three relevant bits
  v1 := 0b00000111
  v0 &= v1
  # Get pointer to right sprite
  # Sprites are 8 bytes, so sprite = tiles + map value * 4
  i := long top-down-tiles
  v0 <<= v0
  v0 <<= v0
  v0 <<= v0
  i += v0
  # Get coordinates in display space (x4)
  v4 := X
  v4 <<= v4
  v4 <<= v4
  v5 := Y
  v5 <<= v5
  v5 <<= v5
  # Render
  sprite v4 v5 4
  X += 1
  if X < 16 then jump render-map-loop
  # Next row
  X := 0
  Y += 1
  if Y < 8 then jump render-map-loop
  # Done
  return

: render-player
  # Get player properties
  i := long player
  load v2
  # Get coordinates in display space (x4)
  v0 <<= v0
  v0 <<= v0
  v1 <<= v1
  v1 <<= v1
  # Get pointer to right sprite (direction x 8)
  i := long player-tile
  v2 <<= v2
  v2 <<= v2
  v2 <<= v2
  i += v2
  # Render
  sprite v0 v1 4
  return

: exit-from-map
  v0 := OCTO_KEY_1
  if v0 key then jump exit-from-map
  v0 := OCTO_KEY_Q
  if v0 key then jump exit-from-map
  mark-screen-dirty
  return
#####################
# Viper "AI"
# Makes the vipers attack. Sometimes.
# This code is pretty sloppy, but October is running out 🙈
# TODO:
#  * Vipers you don't look at don't register on the map (is that a problem?)

: vipers
  # Please run this routine every half a second
  viper-delay := 30

  # Don't run when the screen is dirty, that gives glitches
  i := long dirty
  load v0
  if v0 == 1 then return

  # Check to is if there is a viper around
  # And if so, if it is blocked by a wall.
  v6 := 0b00000111
  :alias wall-seen v8

  # Viper ahead?
  v3 := 1
  v4 := 1
  look-ahead
  v0 &= v6
  if v0 == 5 then jump viper-ahead-near
  if v0 == 1 then jump viper-wall1

  v3 := 1
  v4 := 2
  look-ahead
  v0 &= v6
  if v0 == 5 then jump viper-ahead-far

: viper-wall1
  # Viper around?
  wall-seen := 0
  i := long player
  load v1
  v4 := v0
  v5 := v1
  v1 -= 1
  map-get
  v0 &= v6
  if v0 == 5 then jump viper-around-near
  v9 := 1
  if v0 == 1 then wall-seen |= v9
  v0 := v4
  v0 -= 1
  v1 := v5
  map-get
  v0 &= v6
  if v0 == 5 then jump viper-around-near
  v9 <<= v9
  if v0 == 1 then wall-seen |= v9
  v0 := v4
  v0 += 1
  v1 := v5
  map-get
  v0 &= v6
  if v0 == 5 then jump viper-around-near
  v9 <<= v9
  if v0 == 1 then wall-seen |= v9
  v0 := v4
  v1 := v5
  v1 += 1
  map-get
  v0 &= v6
  if v0 == 5 then jump viper-around-near
  v9 <<= v9
  if v0 == 1 then wall-seen |= v9

  v9 := 1
  v9 &= wall-seen
  if v9 != 0 then jump viper-wall2
  v0 := v4
  v1 := v5
  v1 -= 2
  map-get
  v0 &= v6
  if v0 == 5 then jump viper-around-far
: viper-wall2
  v9 := 2
  v9 &= wall-seen
  if v9 != 0 then jump viper-wall3
  v0 := v4
  v0 -= 2
  v1 := v5
  map-get
  v0 &= v6
  if v0 == 5 then jump viper-around-far
: viper-wall3
  v9 := 4
  v9 &= wall-seen
  if v9 != 0 then jump viper-wall4
  v0 := v4
  v0 += 2
  v1 := v5
  map-get
  v0 &= v6
  if v0 == 5 then jump viper-around-far
: viper-wall4
  v9 := 8
  v9 &= wall-seen
  if v9 != 0 then jump viper-wall5
  v0 := v4
  v1 := v5
  v1 += 2
  map-get
  v0 &= v6
  if v0 == 5 then jump viper-around-far

: viper-wall5
  # Done!
  return


# Do some chance magic
#  * 1 square away & looking at it  => 75% chance
#  * 1 square away & not looking    => 50% chance
#  * 2 squares away & looking at it => 50% chance
#  * 2 squares away & not looking   => 25% chance

: viper-ahead-near
  # keep v4 intact
  v0 := random 3
  if v0 == 0 then return
  jump death-by-visible-viper

: viper-ahead-far
  # keep v4 intact
  v0 := random 1
  if v0 == 0 then return
  death-by-faraway-snake-animation
  jump death-by-visible-viper


: viper-around-near
  v0 := random 1
  if v0 == 0 then return
  jump death-by-invisible-viper

: viper-around-far
  v0 := random 3
  if v0 != 0 then return
  jump death-by-invisible-viper


: death-by-visible-viper
  viper-abs-coords
  default-snake-behaviour
  jump mark-screen-dirty

: death-by-invisible-viper
  #make-visible
  snakeless-death-animation
  send-player-back-to-start
  # Increase death count
  i := long num-deaths
  load v0
  v0 += 1
  i := long num-deaths
  save v0
  jump mark-screen-dirty

: viper-abs-coords
  i := long player
  load v2
  if v2 == 0 then jump viper-ahead-up
  if v2 == 1 then jump viper-ahead-right
  if v2 == 2 then jump viper-ahead-down
  # Else fall through
: viper-ahead-left
  v0 -= v4
  return
: viper-ahead-right
  v0 += v4
  return
: viper-ahead-up
  v1 -= v4
  return
: viper-ahead-down
  v1 += v4
  return
#####################
# Non-blocking key input check
# Updates the player data on input, checks for collisions
# Destroys v0 - v3
: check-keys
  i := long player
  load v2

  # Show mini map
  v0 := OCTO_KEY_1
  if v0 key then jump mini-map
  v0 := OCTO_KEY_Q
  if v0 key then jump mini-map

  # Rotation
  v0 := OCTO_KEY_A
  if v0 key then jump rotate-left
  v0 := OCTO_KEY_D
  if v0 key then jump rotate-right

  # Movement
  if v2 == 0 then jump going-up
  if v2 == 1 then jump going-right
  if v2 == 2 then jump going-down
  # Else fall through:

: going-left
  v0 := OCTO_KEY_W
  if v0 key then jump move-left
  v0 := OCTO_KEY_S
  if v0 key then jump move-right
  return
: going-up
  v0 := OCTO_KEY_W
  if v0 key then jump move-up
  v0 := OCTO_KEY_S
  if v0 key then jump move-down
  return
: going-right
  v0 := OCTO_KEY_W
  if v0 key then jump move-right
  v0 := OCTO_KEY_S
  if v0 key then jump move-left
  return
: going-down
  v0 := OCTO_KEY_W
  if v0 key then jump move-down
  v0 := OCTO_KEY_S
  if v0 key then jump move-up
  return

: rotate-left
  v0 := 3
  v2 -= 1
  v0 &= v2
  i := long player-orientation
  save v0
  mark-screen-dirty
  jump wait-key-release
: rotate-right
  v0 := 3
  v2 += 1
  v0 &= v2
  i := long player-orientation
  save v0
  mark-screen-dirty
  jump wait-key-release
: move-right
  i := long player
  load v1
  v2 := 15
  v0 += 1
  v0 &= v2
  jump collide-or-save
: move-left
  i := long player
  load v1
  v2 := 15
  v0 -= 1
  v0 &= v2
  jump collide-or-save
: move-up
  i := long player
  load v1
  v2 := 7
  v1 -= 1
  v1 &= v2
  jump collide-or-save
: move-down
  i := long player
  load v1
  v2 := 7
  v1 += 1
  v1 &= v2
  # Fall through

: collide-or-save
  # Backup position
  v4 := v0
  v5 := v1
  # Is there a wall at this position?
  map-get
  if v0 == 1 then jump wait-key-release
  # Otherwise, update position
  v1 := v5
  v3 := v0 # save v0 for check-triggers
  v0 := v4
  i := long player
  save v1
  check-triggers
  mark-screen-dirty
  # Fall through

: wait-key-release
  vA := 0
: wait-key-release-loop
  clock-tick
  if vA key then jump wait-key-release-loop
  vA += 1
  if vA != 16 then jump wait-key-release-loop
  return

: check-triggers
  # Did we hit a trigger tile?
  v0 := 0xF0
  v3 &= v0
  if v3 == 0 then return
  v3 >>= v3
  v3 >>= v3
  v3 >>= v3
  map-metadata-start
  v0 := 2
  i += v0
  i += v3
  load v1
  i := check-triggers-smc
  v2 := 0x10
  v0 |= v2
  save v1
: check-triggers-smc
  0 0

# Blocking "press any key" routine
# (does play music though)
# Returns pressed key in v5
: wait-key-press
  vA := 0
: wait-key-press-loop
  clock-tick
  if vA key then return
  vA += 1
  if vA != 16 then jump wait-key-press-loop
  jump wait-key-press
#####################
# Trigger routines for the maps

# Convenience macros

:macro open-wall X Y {
  v0 := X
  v1 := Y
  map-point
  v0 := 0
  save v0
}

:macro close-wall X Y {
  v0 := X
  v1 := Y
  map-point
  v0 := 1
  save v0
}

:macro remove X Y {
  v0 := X
  v1 := Y
  map-point
  v0 := 0
  save v0
}

:macro spawn-snake X Y TRIGGER {
  v0 := X
  v1 := Y
  map-point
  :calc snake-value { TRIGGER + 0x0D }
  v0 := snake-value
  save v0
}

:macro button-behaviour X Y {
  v0 := X
  v1 := Y
  jump default-button-behaviour
}

:macro finish-behaviour {
  jump default-finish-behaviour
}

:macro snake-behaviour X Y {
  v0 := X
  v1 := Y
  jump default-snake-behaviour
}

:macro secret-behaviour {
  jump default-secret-behaviour
}

:macro coin-behaviour X Y {
  v0 := X
  v1 := Y
  jump default-coin-behaviour
}

:macro enter-secret-behaviour X Y {
  v0 := X
  v1 := Y
  jump default-enter-secret-behaviour
}

# Map 5

: map5-button1
  open-wall 5 5
  button-behaviour 3 6

: map5-viper1
  snake-behaviour 3 2

: map5-button2
  open-wall 9 5
  open-wall 12 3
  open-wall 14 5
  button-behaviour 9 6

: map5-viper2
  snake-behaviour 11 2

: map5-coin1
  coin-behaviour 14 2

: map5-button3
  open-wall 7 3
  open-wall 3 1
  spawn-snake 6 4 0xB0
  remove 3 2
  button-behaviour 11 6

: map5-viper3
  snake-behaviour 9 2

: map5-coin2
  coin-behaviour 5 2

: map5-finish
  finish-behaviour

: map5-coin3
  v0 := 4
  v1 := 1
  default-enter-secret-behaviour
  coin-behaviour 4 1

: map5-viper4
  snake-behaviour 6 4

# Map 4

: map4-finish
  finish-behaviour

: map4-button1
  open-wall 8 6
  button-behaviour 12 3

: map4-coin1
  coin-behaviour 7 5

: map4-button2
  close-wall 5 6
  button-behaviour 8 1

: map4-secret1
  enter-secret-behaviour 8 5

: map4-button3
  open-wall 6 5
  button-behaviour 3 3

: map4-coin2
  coin-behaviour 4 6

: map4-secret2
  enter-secret-behaviour 6 4

: map4-viper
  snake-behaviour 7 3

# Map 3

: map3-button1
  open-wall 11 1
  open-wall 3 1
  close-wall 9 1
  button-behaviour 10 1

: map3-button2
  open-wall 11 6
  close-wall 3 1
  open-wall 9 1
  close-wall 11 1
  button-behaviour 12 3

: map3-snake1
  snake-behaviour 11 4

: map3-finish
  finish-behaviour

: map3-secret1
  open-wall 3 6
  secret-behaviour

: map3-coin1
  coin-behaviour 1 5

: map3-coin2
  coin-behaviour 4 6

: map3-secret2
  enter-secret-behaviour 2 6

: map3-snake2
  snake-behaviour 6 6

# Map 2

: map2-button1
  open-wall 9 3
  button-behaviour 7 6

: map2-snake1
  snake-behaviour 11 1

: map2-button2
  open-wall 5 5
  button-behaviour 14 1

: map2-snake2
  snake-behaviour 1 5

: map2-button3
  open-wall 9 5
  open-wall 14 3
  button-behaviour 4 1

: map2-button4
  open-wall 2 1
  button-behaviour 4 3

: map2-coin1
  coin-behaviour 1 2

: map2-coin2
  v0 := 14
  v1 := 4
  default-enter-secret-behaviour
  coin-behaviour 14 4

: map2-finish
  finish-behaviour

: map2-secret
  enter-secret-behaviour 1 1

# Map 1

: map1-button1
  open-wall 2 4
  button-behaviour 10 6

: map1-coin1
  coin-behaviour 8 1

: map1-snake
  snake-behaviour 8 4

: map1-secret1
  open-wall 2 2
  secret-behaviour

: map1-coin2
  coin-behaviour 1 1

: map1-finish
  finish-behaviour

: map1-secret2
  enter-secret-behaviour 1 2

# Training3

: training3-snake
  snake-behaviour 7 5

: training3-finish
  finish-behaviour

# Training2

: training2-button
  open-wall 9 2
  button-behaviour 7 6

: training2-finish
  finish-behaviour

: training2-secret
  open-wall 5 3
  secret-behaviour

: training2-coin1
  coin-behaviour 5 6

: training2-coin2
  coin-behaviour 7 6

: training2-enter-secret
  enter-secret-behaviour 5 4

# Training1

: training1-finish
  finish-behaviour

: training1-coin1
  coin-behaviour 7 4

: training1-coin2
  coin-behaviour 9 4

# Helpers

: default-button-behaviour
  make-visible
  return

: default-finish-behaviour
  map-stats-screen
  return

: default-snake-behaviour
  make-visible
  death-by-snake-animation
  send-player-back-to-start
  # Increase death count
  i := long num-deaths
  load v0
  v0 += 1
  i := long num-deaths
  save v0
  return

: default-secret-behaviour
  # Don't give away the fact that we hit a secret
  return

: default-enter-secret-behaviour
  # Remove this trigger
  map-point
  v0 := 0x08
  save v0
  # Count the secret
  i := long secrets-visited
  load v0
  v0 += 1
  i := long secrets-visited
  save v0
  return

: default-coin-behaviour
  # Remove coin sprite and behaviour
  v5 := v0
  v6 := v1
  map-get
  v4 := v0
  v0 := v5
  v1 := v6
  map-point
  v0 := 0b00001000
  v0 &= v4
  save v0
  # Increase coin count
  i := long coins-collected
  load v0
  v0 += 1
  i := long coins-collected
  save v0
  return

: make-visible
  v5 := v0
  v6 := v1
  map-get
  v4 := v0
  v0 := v5
  v1 := v6
  map-point
  v0 := 0b11110111
  v0 &= v4
  save v0
  return

:org 0x2700

#####################
# Level definitions
# First nibble is a trigger (or zero for no trigger). Triggers are 1-indexed.
# Second nibble is what it should look like, MSB == 1 for invisible on mini-map

: map5
  0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01
  0x01	0x01	0x01	0x01	0xAE	0x01	0x01	0x93	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01
  0x01	0x00	0x00	0x2D	0x01	0x86	0x00	0x00	0x00	0x7D	0x00	0x4D	0x00	0x00	0x56	0x01
  0x01	0x00	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01
  0x01	0x00	0x00	0x00	0x00	0x00	0x00	0x02	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x01
  0x01	0x00	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01
  0x01	0x00	0x00	0x1C	0x01	0x00	0x00	0x00	0x00	0x3C	0x01	0x6C	0x00	0x00	0x00	0x01
  0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01

  # Next level
  0 0

  # Secrets / coins
  1 3

  # Triggers
  pointer map5-button1
  pointer map5-viper1
  pointer map5-button2
  pointer map5-viper2
  pointer map5-coin1
  pointer map5-button3
  pointer map5-viper3
  pointer map5-coin2
  pointer map5-finish
  pointer map5-coin3
  pointer map5-viper4

: map4
  0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01
  0x01	0x00	0x00	0x00	0x00	0x00	0x08	0x00	0x4C	0x01	0x00	0x00	0x00	0x00	0x00	0x01
  0x01	0x00	0x01	0x01	0x01	0x00	0x01	0x01	0x08	0x01	0x00	0x01	0x01	0x01	0x00	0x01
  0x01	0x00	0x01	0x6C	0x01	0x00	0x01	0x9D	0x00	0x01	0x00	0x01	0x2C	0x01	0x00	0x01
  0x01	0x00	0x01	0x00	0x00	0x00	0x88	0x01	0x08	0x01	0x00	0x00	0x00	0x01	0x00	0x01
  0x01	0x00	0x01	0x01	0x01	0x01	0x01	0x3E	0x58	0x01	0x01	0x01	0x01	0x01	0x00	0x01
  0x01	0x00	0x00	0x00	0x76	0x00	0x13	0x01	0x01	0x02	0x00	0x00	0x00	0x00	0x00	0x01
  0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01

  # Next level
  pointer map5

  # Secrets / coins
  2 2

  # Triggers
  pointer map4-finish
  pointer map4-button1
  pointer map4-coin1
  pointer map4-button2
  pointer map4-secret1
  pointer map4-button3
  pointer map4-coin2
  pointer map4-secret2
  pointer map4-viper

: map3
  0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01
  0x01	0x00	0x50	0x01	0x00	0x00	0x01	0x01	0x01	0x00	0x1C	0x01	0x00	0x00	0x00	0x01
  0x01	0x00	0x01	0x01	0x01	0x00	0x00	0x00	0x00	0x00	0x01	0x01	0x01	0x01	0x00	0x01
  0x01	0x00	0x00	0x43	0x01	0x00	0x01	0x00	0x01	0x00	0x01	0x01	0x2C	0x01	0x00	0x01
  0x01	0x01	0x01	0x01	0x01	0x00	0x00	0x02	0x00	0x00	0x01	0x01	0x00	0x00	0x00	0x01
  0x01	0x6E	0x01	0x01	0x01	0x00	0x01	0x00	0x01	0x00	0x01	0x01	0x01	0x01	0x00	0x01
  0x01	0x08	0x88	0x01	0x76	0x00	0x9D	0x00	0x00	0x00	0x00	0x01	0x00	0x00	0x00	0x01
  0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01

  # Next level
  pointer map4

  # Secrets / coins
  1 2

  # Triggers
  pointer map3-button1
  pointer map3-button2
  pointer map3-snake1
  pointer map3-finish
  pointer map3-secret1
  pointer map3-coin1
  pointer map3-coin2
  pointer map3-secret2
  pointer map3-snake2

: map2
  0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01
  0x01	0xA8	0x01	0x00	0x5C	0x01	0x02	0x00	0x01	0x00	0x2D	0x00	0x01	0x00	0x3C	0x01
  0x01	0x76	0x01	0x00	0x01	0x01	0x01	0x00	0x01	0x01	0x01	0x00	0x01	0x00	0x01	0x01
  0x01	0x01	0x01	0x00	0x6C	0x01	0x00	0x00	0x00	0x01	0x00	0x00	0x00	0x00	0x01	0x01
  0x01	0x00	0x01	0x00	0x01	0x01	0x00	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x96	0x01
  0x01	0x4D	0x01	0x00	0x00	0x01	0x00	0x00	0x00	0x01	0x00	0x00	0x00	0x00	0x01	0x01
  0x01	0x00	0x00	0x00	0x01	0x01	0x01	0x1C	0x01	0x01	0x00	0x01	0x01	0x00	0x83	0x01
  0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01

  # Next level
  pointer map3

  # Secrets / coins
  2 2

  # Triggers
  pointer map2-button1
  pointer map2-snake1
  pointer map2-button2
  pointer map2-snake2
  pointer map2-button3
  pointer map2-button4
  pointer map2-coin1
  pointer map2-finish
  pointer map2-coin2
  pointer map2-secret

: map1
  0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01
  0x01	0x5E	0x01	0x01	0x40	0x00	0x00	0x01	0x26	0x00	0x00	0x00	0x00	0x00	0x00	0x01
  0x01	0x78	0x01	0x00	0x00	0x01	0x00	0x00	0x00	0x01	0x01	0x00	0x01	0x01	0x00	0x01
  0x01	0x01	0x01	0x00	0x01	0x01	0x00	0x01	0x01	0x00	0x00	0x00	0x01	0x01	0x00	0x01
  0x01	0x00	0x01	0x00	0x01	0x01	0x00	0x00	0x3D	0x00	0x01	0x01	0x01	0x02	0x00	0x01
  0x01	0x00	0x01	0x00	0x00	0x00	0x00	0x01	0x01	0x01	0x00	0x00	0x00	0x01	0x00	0x01
  0x01	0x63	0x01	0x01	0x01	0x01	0x00	0x00	0x00	0x00	0x1C	0x01	0x00	0x00	0x00	0x01
  0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01	0x01

  # Next level
  pointer map2

  # Secrets / coins
  1 2

  # Triggers
  pointer map1-button1
  pointer map1-coin1
  pointer map1-snake
  pointer map1-secret1
  pointer map1-coin2
  pointer map1-finish
  pointer map1-secret2

: training3
  0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01
  0x01 0x01 0x00 0x00 0x00 0x00 0x00 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01
  0x01 0x01 0x00 0x01 0x01 0x01 0x00 0x00 0x00 0x00 0x01 0x01 0x01 0x01 0x01 0x01
  0x01 0x01 0x00 0x02 0x00 0x00 0x01 0x01 0x01 0x00 0x01 0x01 0x01 0x01 0x01 0x01
  0x01 0x01 0x01 0x01 0x01 0x00 0x01 0x01 0x01 0x00 0x00 0x00 0x23 0x01 0x01 0x01
  0x01 0x01 0x01 0x01 0x01 0x00 0x00 0x1D 0x00 0x00 0x01 0x01 0x01 0x01 0x01 0x01
  0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01
  0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01

  # Next level
  pointer map1

  # Secrets / coins
  0 0

  # Triggers
  pointer training3-snake
  pointer training3-finish

: training2
  0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01
  0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01
  0x01 0x01 0x01 0x01 0x01 0x02 0x00 0x00 0x00 0x01 0x00 0x01 0x01 0x01 0x01 0x01
  0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x00 0x01 0x01 0x00 0x01 0x01 0x01 0x01 0x01
  0x01 0x01 0x01 0x01 0x01 0x68 0x01 0x1C 0x01 0x01 0x00 0x30 0x23 0x01 0x01 0x01
  0x01 0x01 0x01 0x01 0x01 0x08 0x01 0x00 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01
  0x01 0x01 0x01 0x01 0x01 0x4E 0x01 0x56 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01
  0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01

  # Next level
  pointer training3

  # Secrets / coins
  1 2

  # Triggers
  pointer training2-button
  pointer training2-finish
  pointer training2-secret
  pointer training2-coin1
  pointer training2-coin2
  pointer training2-enter-secret

: training1
  0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01
  0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01
  0x01 0x01 0x01 0x01 0x02 0x00 0x00 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01
  0x01 0x01 0x01 0x01 0x01 0x01 0x00 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01
  0x01 0x01 0x01 0x01 0x01 0x01 0x00 0x26 0x00 0x36 0x00 0x13 0x01 0x01 0x01 0x01
  0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01
  0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01
  0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x01

  # Next level
  pointer training2

  # Secrets / coins
  0 2

  # Triggers
  pointer training1-finish
  pointer training1-coin1
  pointer training1-coin2
#####################
# Game state

: player
  0 0 # X, Y
: player-orientation
  0 # orientation

: game-stats
: coins-collected
  0
: num-deaths
  0
: secrets-visited
  0

: dirty
  0

: current-song
  0 0
: music-position
  0
: current-song-backup
  0 0
: music-position-backup
  0

: current-map
  pointer training1

: current-text
  0 0
: text-visible
  0
: current-text-line
  0

: bcd-pad
  0 0 0
# That's all folks!
